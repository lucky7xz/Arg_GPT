 The following is a conversation with Dimitri Dalgov, the CTO of Waymo, which is an autonomous driving company that started as Google's Self-Driving Car Project in 2009 and became Waymo in 2016. Dimitri was there all along. Waymo's currently leading in the fully autonomous vehicle space in that they actually have an at-scale deployment of publicly accessible autonomous vehicles driving passengers around with no safety driver, with nobody in the driver's seat. This to me is an incredible accomplishment of engineering on one of the most difficult and exciting artificial intelligence challenges of the 21st century. Quick mention of each sponsor followed by some thoughts related to the episode. Thank you to Trial Labs, a company that helps businesses apply machine learning to solve real world problems. Blinkist, an app I use for reading through summaries of books, Better Help, Online Therapy with a licensed professional, and Cash App, the app I use to send money to friends. Please check out the sponsors in the description to get a discount at the support this podcast. As a side note, let me say that autonomous and semi-autonomous driving was the focus of my work at MIT and is a problem space that I find fascinating and full of open questions from both robotics and a human psychology perspective. There's quite a bit that I could say here about my experiences in academia on this topic that revealed to me, let's say, the less admirable size of human beings. But I choose to focus on the positive, on solutions. I'm brilliant engineers like Dimitri and the team at Waymo, who work tirelessly to innovate and to build amazing technology that will define our future. Because of Dimitri and others like him, I'm excited for this future. And who knows, perhaps I too will help contribute something of value to it. If you enjoyed this thing, subscribe on YouTube, review it with Five Stars and Up a podcast, follow on Spotify, support on Patreon, or connect with me on Twitter, at Lex Friedman. As usual, I'll do a few minutes of ads now and no ads in the middle. I try to make these interesting, but I give you time stamps so if you skip, please still check out the sponsors by clicking the links in the description. It is, in fact, the best way to support this podcast. This episode is brought to you by Trial Labs, a new sponsor and an amazing company. They help build AI-based solutions for businesses of all sizes. I love these guys, especially after talking to them on the phone and checking out a bunch of their demos and blog posts. If you are a business or just curious about machine learning, check them out at triallabs.com slash Lex. They've worked on price optimization, early detection of machine failures, and all kinds of applications of computer vision, including face detection on lions. Yes, lions, in support of conservation effort in Africa. Their work on price automation and optimization is probably their most impressive in terms of helping businesses make money. Also, as a cool side note, they do release open source code on GitHub on occasion, like a computer vision tracker, for example. Tracking and just the general problem of occlusion very much remains unsolved, but there's been a lot of exciting progress made over the past five years. Anyway, all that to say is that Trial Labs is legit. Great engineers. If you own a business and want to see how AI can help you, do check them out at triallabs.com slash Lex. That's triallabs.com slash Lex. This episode is also supported by Blinkist, my favorite app for learning new things. Blinkist takes the key ideas from thousands of nonfiction books and condenses them down into just 15 minutes that you can read or listen to. I'm a big believer in reading at least an hour every day. As part of that, I use Blinkist almost every day to try out a book I may otherwise never have a chance to read. And in general, it's a great way to broaden your view of the ideal landscape out there and find books that you may want to read more deeply. With Blinkist, you get unlimited access to read or listen to a massive library of condensed nonfiction books. I also use Blinkist Shortcasts to quickly catch up on podcast episodes I've missed. Right now, Blinkist has a special offer just for the listeners of this podcast and probably every other podcast they sponsor, but who's counting? Go to blinkist.com slash Lex to start your free seven day trial and get 25% off of a Blinkist premium membership. That's Blinkist spelled B-L-I-N-K-I-S-T, blinkist.com slash Lex. To get 25% off in a seven day free trial, they're really making me say this over and over, aren't they? That's blinkist.com slash Lex. This episode is also sponsored by BetterHelp, spelled H-E-L-P, help. They figure out what you need and match you with a licensed professional therapist in under 48 hours. I chat with the person on there and enjoy it. Of course, I also have been talking to Mr. David Goggins over the past few months, who is definitely not a licensed professional therapist, but he does help me meet his and my demons and become comfortable to exist in their presence. Everyone is different, but for me, I think suffering is essential for creation, but you can suffer beautifully in a way that doesn't destroy you. Therapy can help in whatever way that therapy takes. So I think BetterHelp is an option worth trying. They're easy, private, affordable, available worldwide. You can communicate by text anytime and schedule weekly audio and video sessions. You didn't ask me, but my two favorite psychiatrists, the Zingwen Freud and Carl Jung. Their work was important in my intellectual development as a teenager. Anyway, check out betterhelp.com slash Lex. That's betterhelp.com slash Lex. Finally, the show is presented by Cash App, the number one finance app in the App Store. When you get it, use code LexPodcast. Cash App lets you send money to friends, buy Bitcoin, and invest in the stock market with as little as $1. I'm thinking of doing more conversations with folks who work in and around the cryptocurrency space. Similar to AI, there are a lot of charlatans in this space, but there are also a lot of free thinkers and technical geniuses that are worth exploring ideas with in depth and with care. As an example of that, Vitalik Buterin will definitely be back on the podcast. She listened to the first one. He'll be back on probably many more times. I see that guy accomplishing a huge amount of things in his life and I love talking to him. All right, if you get Cash App from the App Store, Google Play, use code LexPodcast, you get $10. And Cash App will also donate $10 to FIRST, an organization that is helping to advance robotics, STEM education for young people around the world. And now here's my conversation with Dmitry Dalgov. ["Dollgove Theme Song"] When did you first fall in love with robotics or even computer science more in general? Computer science first at a fairly young age. Robotics happened much later. I think my first interesting introduction to computers was in the late 80s when we got our first computer. I think it was an IBM, I think IBM AT. Do you remember those things that had like a turbo button in the front? Turbo button. The radio press it and make the thing goes faster. Did they already have floppy disks? Yeah, yeah, yeah, like the 5.4 inch ones. I think there was a bigger inch. So when something then five inches and three inches. Yeah, I think that was the five. I don't know, maybe that was before that was the giant plates and I didn't get that, but it was definitely not the three inch ones. Anyway, so that, you know, we got that computer, I spent the first few months just playing video games, as you would expect. I got bored of that. So I started messing around and trying to figure out how to make the thing do other stuff. Got into exploring, you know, programming. And a couple of years later, it got to a point where I actually wrote a game, a little game and a game developer, a Japanese game developer actually offered to buy it for me for, you know, a few hundred bucks, but you know, for a kid in Russia. That's a big deal. That's a big deal, yeah. I did not take the deal. Wow, integrity. Yeah, I instead- Stupidity. Yes, that was not the most acute financial move that I made in my life. You know, looking back at it now, I instead put it, well, you know, I had a reason. I put it online. It was, what did you call it back in the days? It was a freeware thing, right? It was not open source, but you could upload the binaries, you would put the game online. And the idea was that, you know, people like it and then they, you know, contribute and they send you a little donations, right? So I did my quick math of like, you know, of course, you know, thousands of millions of people are gonna play my game, send me a couple of bucks a piece. You know, should definitely do that. As I said, not the best find. You're already playing business models at that age. Remember what language it was? What programming was it based on? Pascal. Which what? Pascal. Pascal. And they had a graphical component. It did. So it's not text-based. Yeah, it was like, I think, you know, 320 by 200, whatever it was. I think that kind of the earlier version. It was the VGA resolution, right? And I actually think the reason why this company wanted to buy it is not like the fancy graphics or the implementation. It was maybe the idea of the actual game. The idea of the game. Well, one of the things, it's so funny. I used to play this game called Golden Axe and the simplicity of the graphics and something about the simplicity of the music, like it still haunts me. I don't know if that's a childhood thing. I don't know if that's the same thing for Call of Duty these days for young kids. But I still think that the games are simple. That simple purity makes for, like allows your imagination to take over and thereby creating a more magical experience. Like now with better and better graphics, it feels like your imagination doesn't get to create worlds, which is kind of interesting. It could be just an old man on a porch waving at kids these days that have no respect. But I still think that graphics almost get in the way of the experience. I don't know. Flippy Bird. Yeah, that's true. Well, I don't know if the imagination is closed. Yeah, but that's more about games that, that's more like Tetris World where they optimally masterfully create a fun, short-term dopamine experience versus I'm more referring to like role-playing games where there's like a story. You can live in it for months or years. Like there's an Elder Scrolls series, which is probably my favorite set of games. That was a magical experience. And then the graphics are terrible. The characters were all randomly generated, but I don't know. It pulls you in. There's a story. It's like an interactive version of an Elder Scrolls token world, and you get to live in it. I don't know. I miss it. One of the things that suck about being an adult is there's no, you have to live in the real world as opposed to the Elder Scrolls world. You know, whatever brings you joy, right? Minecraft, right? Minecraft's a great example. Create, like it's not the fancy graphics, but it's the creation of your own worlds. Yeah, that one is crazy. You know, one of the pitches for being a parent that people tell me is that you can like use the excuse of parenting to go back into the video game world. And like, that's like, you know, father, son, father-daughter time, but really you just get to play video games with your kids. Anyway, at that time, did you have any ridiculously ambitious dreams of where as a creator you might go as an engineer? What did you think of yourself as an engineer, as a tinkerer, or did you want to be like an astronaut or something like that? You know, I'm tempted to make something up about, you know, robots, engineering, or, you know, mysteries of the universe, but that's not the actual memory that pops into my mind when you ask me about childhood dreams. So I'll actually share the real thing. When I was maybe four or five years old, I, you know, as we all do, I thought about what I wanted to do when I grow up. And I had this dream of being a traffic control cop. You know, they don't have those today, I think, but you know, back in the eighties and in Russia, you probably are familiar with that Lex, they had these police officers that would stand in the middle of intersection all day, and they would have their like striped back and white batons that they would use to control the flow of traffic. And, you know, for whatever reason, I was strangely infatuated with this whole process. And like that, that was my dream. That's what I wanted to do when I grew up. And, you know, my parents, both physics profs, by the way, I think were, you know, a little concerned with that level of ambition coming from their child at that age. Well, it's an interesting, I don't know if you can relate, but I very much love that idea. I have an OCD nature that I think lends itself very close to the engineering mindset, which is you want to kind of optimize, you know, solve a problem by creating an automated solution, like a set of rules, that set of rules that you follow, and then thereby make it ultra efficient. I don't know if that's, it was of that nature. I certainly have that. There's like fact, like SimCity and factory building games, all those kinds of things, kind of speak to that engineering mindset. Or did you just like the uniform? I think it was more of the latter, I think. It was the uniform and the, you know, the striped baton there that made cars go in the right directions. That drove it. But I guess, you know, it is, I did end up, I guess, you know, working on the transportation industry one way or another. No uniform, no. That's right. That's the list of times. Maybe it was my, you know, deep inner infatuation with the, you know, traffic control batons that led to this career. Okay. What, when did you, when was the leap from programming to robotics? That happened later. That was after grad school, after, and actually the most self-driving cars was, I think my first real hands-on introduction to robotics. But I never really had that much hands-on experience in, you know, school and training. I, you know, worked on applied math and physics. Then in, you know, college, I did more abstract computer science. And it was after grad school that I really got involved in robotics, which was actually self-driving cars. And, you know, that was a big bit flip. What grad school? So I went to grad school in Michigan, and then I did a postdoc at Stanford, which is, that was the postdoc where I got to play with self-driving cars. Yeah. So we'll return there. Let's go back to Moscow. So, you know, for episode 100, I talked to my dad and also I grew up with my dad, I guess. So I had to put up with him for many years. And he went to the Fisztya, or M-I-P-T. It's weird to say in English, because I've heard all of this in Russian. Moscow Institute of Physics and Technology. And to me, that was like, I met some super interesting, as a child, I met some super interesting characters. It felt to me like the greatest university in the world, the most elite university in the world. And just the people that I met that came out of there were like, not only brilliant, but also special humans. It seems like that place really tested the soul, both like in terms of technically and like spiritually. So that could be just the romanticization of that place. I'm not sure, but so maybe you can speak to it, but is it correct to say that you spent some time at Fisztya? Yeah, that's right. Six years, I got my bachelor's and master's and a physics and math there. And it's actually interesting, because my dad, actually both my parents went there, and I think all the stories that I heard, just like you, Alex, growing up about the place and how interesting and special and magical it was, I think that was a significant, maybe the main reason I wanted to go there for college. It's enough so that I actually went back to Russia from the US. I graduated high school in the US. You went back there. I went back there, yeah. Wow. Exactly the reaction most of my peers in college had, but perhaps a little bit stronger. That would point me out as this crazy kid. Were your parents supportive of that? Yeah, yeah. My game was your previous question. They supported me in letting me pursue my passions and the things that I would understand. That's a bold move, wow. What was it like there? It was interesting. Definitely fairly hardcore on the fundamentals of math and physics and lots of good memories from those times. So, okay, so Stanford, how'd you get into autonomous vehicles? I had the great fortune and great honor to join Stanford's DARPA Urban Challenge Team in 2006. This was a third in the sequence of the DARPA challenges, or two grand challenges prior to that. And then in 2007, they held the DARPA Urban Challenge. So, I was doing my postdoc. I joined the team and worked on motion planning for that competition. So, okay, so for people who might not know, I know from a certain person, autonomous vehicles is a funny world. In a certain circle of people, everybody knows everything. And then in a certain circle, nobody knows anything in terms of general public. So, it's interesting. It's a good question of what to talk about, but I do think that the Urban Challenge is worth revisiting. It's a fun little challenge. One that first sparked so much, so many incredible minds to focus on one of the hardest problems of our time in artificial intelligence. So, that's a success from a perspective of a single little challenge. But can you talk about what did the challenge involve? So, were there pedestrians? Were there other cars? What was the goal? Who was on the team? How long did it take? Any fun sort of specs? Sure, sure, sure. So, the way the challenge was constructed and just a little bit of backgrounding, as I mentioned, this was the third competition in that series. The first two were the grand challenge, called the grand challenge. The goal there was to just drive in a completely static environment. You had to drive in a desert. That was very successful. So, then DARPA followed with what they called the Urban Challenge, where the goal was to build vehicles that could operate in more dynamic environments and share them with other vehicles. There were no pedestrians there, but what DARPA did is they took over an abandoned Air Force base, and it was kind of like a little fake city that they built out there. And they had a bunch of robots, cars that were autonomous in there, all at the same time, mixed in with other vehicles driven by professional drivers. And each car had a mission. So, there's a crude map that they received in the beginning, and they had a mission. You go here and then there and over here. And they kind of all were sharing this environment the same time they had to interact with each other. They had to interact with the human drivers. So, it was this very first, very rudimentary version of a self-driving car that could operate in an environment shared with other dynamic actors. That, as you said, really, in many ways, kickstarted this whole industry. Okay, so who was on the team, and how'd you do? I forget. We came in second. Perhaps that was my contribution to the team. I think the Stanford team came in first in the DARPA Challenge, but then I joined the team. And you were the one with the bug in the code. I mean, do you have sort of memories of some particularly challenging things? Or one of the cool things, it's not, this isn't a product, this isn't a thing that, you have a little bit more freedom to experiment, so you can take risks, and there's, so you can make mistakes. Is there interesting mistakes? Is there interesting challenges that stand out to you, or something like taught you a good technical lesson, or a good philosophical lesson from that time? Yeah, definitely a very memorable time. Not really a challenge, but one of the most vivid memories that I have from the time, and I think that was actually one of the days that really got me hooked on this whole field was the first time I got to run my software on the car. And I was working on a part of our planning algorithm that had to navigate in parking lots. So it was something called free space motion planning. So the very first version of that, we tried on the car, it was on Stanford's campus in the middle of the night, and I had this little course constructed with cones in the middle of a parking lot. So we were there in like 3 a.m. by the time we got the code to compile and turnover. And it drove, I could actually did something quite reasonable. And I was of course very buggy at the time and had all kinds of problems, but it was pretty darn magical. I remember going back and later at night trying to fall asleep and just being unable to fall asleep for the rest of the night, just my mind was blown. Just like, man, that's what I've been doing ever since for more than a decade. In terms of challenges and interesting memories, like on the day of the competition, it was being pretty nerve-wracking. I remember standing there with Mike Montemarola who was the software lead and wrote most of the code. I did one little part of the planner, Mike incredibly, did pretty much the rest of it with a bunch of other incredible people. But I remember standing on the day of the competition, watching the car with Mike, and cars are completely empty. They're lined up in the beginning of the race. And then DARPA sends them on their mission one by one, so then leave and they had these sirens. They all had their different silence. Each siren had its own personality, if you will. So off they go and you don't see them. And then every once in a while, they come a little bit closer to where the audience is and you can kind of hear the sound of your car. And it seems to be moving along, so that gives you hope. And then it goes away and you can't hear it for too long. You start getting anxious, right? So it's a little bit like sending your kids to college and kind of you invested in them. You hope, you build it properly, but it's still anxiety-inducing. So that was an incredibly fun few days. In terms of bugs, as we mentioned, one that was my bug that caused the loss of the first place, still a debate that I occasionally have with people and the CMU team, CMU came first, I should mention. Say you haven't heard of them. But yeah, it's a small school. It's really a glitch that they happen to succeed at something robotics-related. Very scenic though. Most people go there for the scenery. Yeah, it's a beautiful campus. I like Stanford. So for people, yeah, that's true, I like Stanford. For people who don't know, CMU is one of the great robotics and sort of artificial intelligence universities in the world. CMU Carnegie Mellon University. Okay, sorry, go ahead. Good PSA. So in the part that I contributed to, which was navigating parking lots, and the way that part of the mission worked is, in a parking lot, you would get from DARPA an outline of the map. You basically get this giant polygon that defined the perimeter of the parking lot, and there would be an entrance, and so maybe multiple entrances or exits to it, and then you would get a goal within that open space, XY heading, where the car had to park. It had no information about the obstacles that the car might encounter there, so it had to navigate a completely free space from the entrance to the parking lot into that parking space, and then once it parked there, it had to exit the parking lot, while of course encountering and reasoning about all the obstacles that it encounters in real time. So our interpretation, or at least my interpretation of the rules, was that you had to reverse out of the parking spot, and that's what our cars did, even if there's no obstacle in front. That's not what CMU's car did, and it just kind of drove right through, so there's still a debate, and of course, as you stop and then reverse out and go out the different way, that costs you some time, right? So there's still a debate whether, it was my poor implementation that cost us extra time, or whether it was CMU violating the important rule of the competition, and I have my own opinion here. In terms of other bugs, and I have to apologize to Mike Montemarola for sharing this on air, but it is actually one of the more memorable ones, and it's something that's kind of become a bit of a metaphor, I don't know, label in the industry since then, I think, at least in some circles, it's called the Victory circle, or Victory lap, and our cars did that. So in one of the missions in the Urban Challenge, in one of the courses, there was this big oval right by the start and finish of the race, so the arpa head, a lot of the missions would finish in that same location, and it was pretty cool, because you could see the cars come by, kind of finish that part leg of the trip with all that leg of the mission, and then go on and finish the rest of it. And other vehicles would come, hit their waypoint, and exit the oval, and off they would go. Our car in the hand would hit the checkpoint, and then it would do an extra lap around the oval, and only then leave and go on its merry way. So over the course of the full day, it accumulated some extra time, and the problem was that we had a bug where it wouldn't start reasoning about the next waypoint and plan a route to get to that next point until it hit a previous one, and in that particular case, by the time you hit that one, it was too late for us to consider the next one and kind of make a lane change, so every time it would do an extra lap. So, you know, that's the Stanford Victory Lap. The Victory Lap. Oh, I feel like there's something philosophically profound in there somehow, but I mean, ultimately, everybody is a winner in that kind of competition, and it led to, sort of famously, to the creation of Google Self-Driving Car Project, and now Waymo. So can we give an overview of how is Waymo born? How is the Google Self-Driving Car Project born? What is the mission? What is the hope? What is the engineering kind of set of milestones that it seeks to accomplish? There's a lot of questions in there. Yeah. I don't know. But you're right. Kind of the Dark led, I think, to a very large degree to that next step. I think Larry and Sergey, Larry Page and Sergey Brin, Google founders, I saw that competition and believed in the technology. So the Google Self-Driving Car Project was born. You know, at that time, and we started in 2009, it was a pretty small group of us, about a dozen people who came together to work on this project at Google. At that time, we saw that incredible early result in the DARPA Urban Challenge. I think we're all incredibly excited about where we got to. And we believed in the future of the technology, but we still had a very rudimentary understanding of the problem space. So the first goal of this project in 2009 was to really better understand what we're up against. And with that goal in mind, when we started the project, we created a few milestones for ourselves that maximized learning. Well, the two milestones were, one was to drive 100,000 miles in autonomous mode, which was at that time orders of magnitude that more than anybody has ever done. And the second milestone was to drive 10 routes. Each one was 100 miles long. And they were specifically chosen to be kind of extra spicy, extra complicated and sample the full complexity of that domain. And you had to drive each one from beginning to end with no intervention, no human intervention. So you would get to the beginning of the course, you would press the button that would engage in autonomy, and you had to go for 100 miles beginning to end with no interventions. And it sampled, again, the full complexity of driving conditions. Some were on freeways. We had one route that went all through all the freeways and all the bridges in the Bay Area. We had some that went around Lake Tahoe and kind of mountains roads. We had some that drove through dense urban environments like in downtown Palo Alto and through San Francisco. So it was incredibly interesting to work on. And it took us just under two years, about a year and a half, a little bit more, to finish both of these milestones. And in that process, it was an incredible amount of fun, probably the most fun I had in my professional career. And you're just learning so much. You are, the goal here is to learn and prototype. You're not yet starting to build a production system. So you just, you were, this is when you're kind of working 24 seven and you're hacking things together. And you also don't know how hard this is. I mean, that's the point. Like, so, I mean, that's an ambitious, if I put myself in that mindset, even still, that's a really ambitious set of goals. Like just those two picking 10 different, difficult, spicy challenges and then having zero interventions. So like not saying gradually we're going to like, over a period of 10 years, we're going to have a bunch of roots and gradually reduce the number of interventions. That literally says like by, but as soon as possible, we wanna have zero and on hard roads. So like to me, if I was facing that, it's unclear whether that takes two years or whether that takes 20 years. I mean, it may be under two. I guess that speaks to a really big difference between doing something once and having a prototype where you're going after learning about the problem versus how you go about engineering a product that where you look at, you properly do evaluation, you look at metrics, you drive down and you're confident that you can do that at high. And I guess that's why it took a dozen people, 16 months or a little bit more than that, back in 2009 and 2010 with the technology of the more than a decade ago, that amount of time to achieve that milestone of 10 routes, 100 miles each and no interventions. And it took us a little bit longer to get to a full driverless product that customers use. That's another really important moment. Is there some memories of technical lessons or just one, like, what did you learn about the problem of driving from that experience? I mean, we can now talk about like what you learned from modern day Waymo, but I feel like you may have learned some profound things in those early days, even more so, because it feels like what Waymo is now is to trying to, you know, how to do scale, how to make sure you create a product, how to make sure it's like safety, you know, those things are just all fascinating challenges. But like you were facing the more fundamental philosophical problem of driving in those early days. Like what the hell is driving as an autonomous, maybe I'm again, romanticizing it, but is there some valuable lessons you picked up over there at those two years? A ton, the most important one is probably that we believe that it's doable. And we've gotten far enough into the problem that, you know, we had a, I think only a glimpse of the true complexity of the domain. You know, it's a little bit like, you know, climbing a mountain where you kind of, you know, see the next peak and you think that's kind of the summit, but then you get to that and you kind of see that, that this is just the start of the journey. But we've tried, we've sampled enough of the problem space and we've made enough rapid success, even, you know, with technology of 2009, 2010, that it gave us confidence to then pursue this as a real product. So, okay, so the next step, you mentioned the milestones that you had in those two years. What are the next milestones that then led to the creation of Waymo and beyond? Yeah, it was a really interesting journey. And, you know, Waymo came a little bit later. Then, you know, we completed those milestones in 2010. That was the pivot when we decided to focus on actually building a product, you know, using this technology. The initial couple of years after that, we were focused on a freeway, you know, what you would call a driver assist, maybe on, you know, an L3 driver assist program. Then around 2013, we've learned enough about the space and have thought more deeply about, you know, the product that we wanted to build that we pivoted. We pivoted towards this vision of, you know, building a driver and deploying it fully driverless vehicles without a person. And that's the path that we've been on since then. And very, it was exactly the right decision for us. So there was a moment where you also considered like, what is the right trajectory here? What is the right role of automation in the task of driving? There was still, it wasn't from the early days, obviously you wanna go fully autonomous. From the early days it was not. I think it was around 2013, maybe that we've, that became very clear and we made that pivot and it also became very clear. And that it's, even the way you go building a driver assist system is fundamentally different from how you go building a fully driverless vehicle. So, you know, we've pivoted towards the latter and that's what we've been working on ever since. And so that was around 2013. Then there's sequence of really meaningful for us, really important defining milestones since then. And 2015, we had our first, actually the world's first fully driverless ride on public roads. It was in a custom built vehicle that we had. I must've seen those, we called them the Firefly, the funny looking, marshmallow looking thing. And we put a passenger, his name was Steve Mann, a great friend of our project from the early days, the man happens to be blind. So we put him in that vehicle and we put him on that vehicle and the man happens to be blind, so we put him in that vehicle. The car had no steering wheel, no pedals. It was an uncontrolled environment, you know, no lead or chase cars, no police escorts. And we did that trip a few times in Austin, Texas. So that was a really big milestone. But that was in Austin. Yeah. Cool. Okay. And we only, but at that time we're only, it took a tremendous amount of engineering. It took a tremendous amount of validation to get to that point. But we only did it a few times. We only did that, it was a fixed route. It was not kind of a controlled environment, but it was a fixed route and we only did it a few times. Then in 2016, end of 2016, beginning of 2017, is when we founded Waymo, the company. That's when we, that was the next phase of the project where we believed in kind of the commercial vision of this technology and it made sense to create an independent entity, you know, within that alphabet umbrella to pursue this product at scale. Beyond that in 2017, later in 2017, it was another really huge step for us, really big milestone where we started, I think it was October of 2017, where when we started regular driverless operations on public roads, that first day of operations, we drove in one day, in that first day, 100 miles in driverless fashion and then the most important thing about that milestone was not that 100 miles in one day, but that it was the start of kind of regular ongoing driverless operations. And when you say driverless, it means no driver. That's exactly right. So on that first day, we actually had a mix and up in some, we didn't want to like, be on YouTube and Twitter that same day. So in many of the rides, we had somebody in the driver's seat, but they could not disengage. Like the car could not disengage. But actually on that first day, some of the miles were driven and just completely empty driver seat. And this is the key distinction that I think people don't realize is, you know, that oftentimes when you talk about autonomous vehicles, there's often a driver in the seat that's ready to take over what's called a safety driver. And then Waymo is really one of the only companies at least that I'm aware of, or at least as like boldly and carefully and all that is actually has cases. And now we'll talk about more and more, where there's literally no driver. So that's another, the interesting case of where the driver's not supposed to disengage, that's like a nice middle ground. They're still there, but they're not supposed to disengage, but really there's the case when there's no, okay, there's something magical about there being nobody in the driver's seat. Like, just like to me, you mentioned the first time you wrote some code for free space navigation of the parking lot, that was like a magical moment. To me, just sort of as an observer of robots, the first magical moment is seeing an autonomous vehicle turn, like make a left turn, like apply sufficient torque to the steering wheel to where like there's a lot of rotation and for some reason, and there's nobody in the driver's seat, for some reason that communicates that here's a being with power that makes a decision. There's something about like the steering wheel is we perhaps romanticize the notion of the steering wheel. It's so essential to our conception, our 20th century conception of a car, and it turning the steering wheel with nobody in driver's seat that to me, I think maybe to others, it's really powerful, like this thing is in control. And then there's this leap of trust that you give, like I'm gonna put my life in the hands of this thing that's in control. So in that sense, when there's no driver in the driver's seat, that's a magical moment for robots. So I got a chance to last year to take a ride in a way more vehicle, and that was the magical moment. There's like nobody in the driver's seat. It's like the little details, you would think it doesn't matter whether there's a driver or not, but like if there's no driver and the steering wheel is turning on its own, I don't know, that's magical. It's absolutely magical. I've taken many of these rides in a completely empty car. No human in the car pulls up. You call it on your cell phone, it pulls up, you get in, it takes you on its way, there's nobody in the car but you. That's something called fully driverless. Our rider only mode of operation. Yeah, it is magical, it is transformative. This is what we hear from our riders. It really changes your experience. And that really is what unlocks the real potential of this technology. But coming back to our journey, that was 2017 when we started Truly Driverless Operations. Then in 2018, we've launched our public commercial service that we called Waymo One in Phoenix. In 2019, we started offering Truly Driverless Rider Only rides to our early rider population of users. And then 2020 has also been a pretty interesting year. One of the first ones, that's about technology but more about the maturing and the growth of Waymo as a company. We raised our first round of external financing this year. We were part of Alphabet so obviously we have access to significant resources but as kind of on the journey of Waymo maturing as a company, it made sense for us to partially go externally in this round. So we raised about $3.2 billion from that round. We've also started putting our fifth generation of our driver, our hardware that is on the new vehicle but it's also a qualitatively different set of self-driving hardware that is now on the JLR pace. So that was a very important step for us. The hardware specs, fifth generation, I think it'd be fun to maybe, I apologize if I'm interrupting but maybe talk about maybe the generations with a focus on what we're talking about in the fifth generation in terms of hardware specs, like what's on this car? Sure, so we separated out the actual car that we are driving from the self-driving hardware we put on it. Right now we have, so this is as I mentioned the fifth generation, we've gone through, we started building our own hardware many, many years ago and that Firefly vehicle also had the hardware suite that was mostly designed, engineered and built in house. Lighters are one of the more important components that we designed and built from the ground up. So on the fifth generation of our drivers of our self-driving hardware that we're switching to right now, we have as with previous generations in terms of sensing we have lighters, cameras and radars and we have a pretty beefy computer that processes all that information and makes decisions in real time on board the car. So in all of the, and it's really a qualitative jump forward in terms of the capabilities and the various parameters and the specs of the hardware compared to what we had before and compared to what you can kind of get off the shelf in the market today. Meaning from fifth to fourth or from fifth to first? Definitely from first to fifth, but also from the fourth. That was the world's dumbest question. Definitely from fourth to fifth, as well as this, the last step is a big step forward. So everything's in house, so like LIDAR is built in house and cameras are built in house? It's different, we work with partners and there's some components that we get from our manufacturing and supply chain partners. What exactly is in house is a bit different if you, we do a lot of custom design on all of our something like that. There's LIDARs, RADARs, cameras, exactly. LIDARs are almost exclusively in house and some of the technologies that we have, some of the fundamental technologies there are completely unique to Waymo. That is also largely true about RADARs and cameras, it's a little bit more of a mix in terms of what we do ourselves versus what we get from partners. Is there something super sexy about the computer that you can mention that's not top secret? Like for people who enjoy computers, for I mean, there's a lot of machine learning involved but there's a lot of just basic computers. You have to probably do a lot of signal processing on all the different sensors. You have to integrate everything, you have to be in real time. There's probably some kind of redundancy type of situation. Is there something interesting you can say about the computer for the people who love hardware? It does have all of the characteristics, all the properties that you just mentioned. Redundancy, very beefy compute for general processing as well as inference and ML models. It is some of the more sensitive stuff that I don't wanna get into for IP reasons but we've shared a little bit in terms of the specs of the sensors that we have on the car. We actually shared some videos of what our lighters see in the world. We have 29 cameras, we have five lighters, we have six radars on these vehicles and you can kind of get a feel for the amount of data that they're producing that all has to be processed in real time to do perception, to do complex reasoning. So it kind of gives you some idea of how beefy those computers are but I don't wanna get into specifics of exactly how we build them. Okay, well, let me try some more questions that you can't get into the specifics of like GPU wise, is that something you can get into? I know that Google works with TPUs and so on. I mean, for machine learning folks, it's kind of interesting or is there no, how do I ask it? I've been talking to people in the government about UFOs and they don't wanna answer any questions. So this is how I feel right now asking about GPUs. But is there something interesting that you could reveal or is it just, you know, or leave it up to our imagination, some of the compute? Is there any, I guess, is there any fun trickery? Like I talked to Chris Latner for a second time and he was a key person about TPUs and there's a lot of fun stuff going on in Google in terms of hardware that optimizes for machine learning. Is there something you can reveal in terms of how much, you mentioned customization, how much customization there is for hardware for machine learning purposes? I'm gonna be like that government, you know, you've got a person about UFOs. But I guess I will say that it's really, compute is really important. We have very data-hungry and compute-hungry ML models of all over our stack. And this is where, you know, both being part of Alphabet as well as designing our own sensors and the entire hardware suite together, where on one hand you get access to like really rich, raw sensor data that you can pipe from your sensors into your compute platform and build, like build a whole pipe from sensor, raw sensor data to the big compute as then have the massive compute to process all that data. This is where we're finding that having a lot of control of that hardware part of the stack is really advantageous. One of the fascinating magical places to me, again, might not be able to speak to the details, but is the other compute, which is like, you know, we're just talking about a single car, but the driving experience is a source of a lot of fascinating data. And you have a huge amount of data coming in on the car and, you know, the infrastructure of storing some of that data to then train or to analyze or so on. That's a fascinating like piece of it that I understand a single car. I don't understand how you pull it all together in a nice way. Is that something that you could speak to in terms of the challenges of seeing the network of cars and then bringing the data back and analyzing things that like edge cases of driving, be able to learn on them, to improve the system, to see where things went wrong, where things went right and analyze all that kind of stuff. Is there something interesting there from an engineering perspective? Oh, there's an incredible amount of really interesting work that's happening there, both in the real time operation of the fleet of cars and the information that they exchange with each other in real time to make better decisions, as well as on the kind of off-board component where you have to deal with massive amounts of data for training your ML models, evaluating the ML models, for simulating the entire system and for evaluating your entire system. And this is where being part of Alphabet has big ones again been tremendously advantageous. And we consume an incredible amount of compute for ML infrastructure. We build a lot of custom frameworks to get good at, you know, on data mining, finding the interesting edge cases for training and for evaluation of the system for both training and evaluating sub-components and your sub parts of the system on various ML models, as well as evaluating the entire system in simulation. Okay, that first piece that you mentioned that cars communicating to each other, essentially, I mean, through perhaps through a centralized point, but what, that's fascinating too. How much does that help you? Like if you imagine, you know, right now the number of way more vehicles is whatever X, I don't know if you can talk to what that number is, but it's not in the hundreds of millions yet. And imagine if the whole world is way more vehicles. Like that changes potentially the power of connectivity. Like the more cars you have, I guess actually, if you look at Phoenix, because there's enough vehicles, there's enough, when there's like some level of density, you can start to probably do some really interesting stuff with the fact that cars can negotiate, can communicate with each other and thereby make decisions. Is there something interesting there that you can talk to about like, how does that help with the driving problem from as compared to just a single car solving the driving problem by itself? Yeah, it's a spectrum. First, I'd say that, you know, it helps. And it helps in various ways, but it's not required. Right now, the way we build our system, like each car's can operate independently, they can operate with no connectivity. So I think it is important that, you know, you have a fully autonomous, you know, fully capable driver, that, you know, computerized driver that each car has. Then, you know, they do share information and they share information in real time, and it really helps. So the way we do this today is, you know, whenever one car encounters something interesting in the world, whether it might be an accident or a new construction zone, that information immediately gets, you know, uploaded over the air and is propagated to the rest of the fleet. And that's kind of how we think about maps as priors in terms of the knowledge of our drivers, of our fleet of drivers, that is distributed across the fleet, and it's updated in real time. So that's one use case. You know, you can imagine as the, you know, the density of these vehicles go up, that they can exchange more information in terms of what they're planning to do and start influencing how they interact with each other, as well as, you know, potentially sharing some observations to help with, you know, if you have enough density of these vehicles where, you know, one car might be seeing something that another is relevant to another car, that is very dynamic. You know, it's not part of kind of your updating your static prior of the map of the world, but it's more of a dynamic information that could be relevant to the decisions that another car is making in real time. So you can see them exchanging that information and you can build on that. But again, I see that as an advantage, but it's, you know, not a requirement. So what about the human in the loop? So when I got a chance to drive with a ride in a Waymo, you know, there's customer service. So like there is somebody that's able to dynamically like tune in and help you out. What role does the human play in that picture? That's a fascinating, like, you know, the idea of teleoperation, you know, how can you be able to remotely control a vehicle? So here what we're talking about is like, like frictionless, like a human being able to, in a frictionless way, sort of help you out. I don't know if they're able to actually control the vehicle. Is that something you could talk to? Yes. Okay. To be clear, we don't do teleoperation. I gotta believe in teleoperation for a very reason, that's not what we have in our cars. We do, as you mentioned, have, you know, a version of customer support, you know, we call it live health. In fact, we find it that it's very important for our rider experience, especially if it's your first trip. You've never been in a fully driverless rider, only Waymo vehicle, you get in, there's nobody there. And so you can imagine having all kinds of questions in your head, like how this thing works. So we've put a lot of thought into kind of guiding our riders or customers through that experience, especially for the first time, they get some information on the phone. If the fully driverless vehicle is used to service their trip, when you get into the car, we have an in-car screen and audio that kind of guides them and explains what to expect. They also have a button that they can push that will connect them to, you know, a real life human being that they can talk to, right? About this whole process. So that's one aspect of it. There is, you know, I should mention that there is another function that humans provide to our cars, but it's not teleoperation. You can think of it a little bit more like, you know, fleet assistance, kind of like, you know, traffic control that you have, where our cars, again, they're responsible on their own for making all of the decisions, all of the driving decisions that don't require connectivity. They, you know, anything that is safety or latency critical is done, you know, purely autonomously by onboard, our onboard system. But there are situations where, you know, if connectivity is available, and a car encounters a particularly challenging situation, you can imagine like a super hairy scene of an accident. The cars will do their best, they will recognize that it's an off nominal situation. They will, you know, do their best to come up, you know, with the right interpretation, the best course of action in that scenario. But if connectivity is available, they can ask for confirmation from, you know, here at the WEA MO 9, totally through a cloud to three people in our early writer program taking fully driverless rides in Phoenix. And just this a little while ago, we opened on October 8th, we opened that mode of operation to the public. So I can download the app and go on a ride. There is a lot more demand right now for that service than we have capacity. So we're kind of managing that, but that's exactly the way you described it. Yeah. Well, that's interesting. So there's more demand than you can, you can handle like what, what has been a reception so far, like what, I mean, okay. So, you know, that's, this is a product, right? That's a whole nother discussion of like how compelling of a product it is. Great. But it's also like one of the most kind of transformational technologies of the 21st century. So there, it's also like a tourist attraction. Like it's fun to, you know, to be a part of it. So it'd be interesting to see like what, what do people say? What do people, what have been the feedback so far? You know, still early days, but so far the feedback has been an incredible, incredibly positive. They, you know, we asked them for feedback during the ride. We asked them for feedback after the ride as part of their trip. We asked them some questions and we asked them to, you know, rate the performance of our driver. Most, by far, you know, most of our drivers give us plus five stars in our app, which is absolutely great to see. And yeah, that's, and we're, they're also giving us feedback on, you know, things we can improve. And yeah, that's one of the main reasons we're doing this as Phoenix. And you know, over the last couple of years and every day today, we are just learning a tremendous amount of new stuff from our users. There's, there's no substitute for actually doing the real thing, actually having a fully driverless product out there in the field with, you know, users that are actually paying us money to get from point A to point B. So this is a legitimate, like, there's a paid service. That's right. And the idea is you use the app to go from point A to point B. And then what, what are the A's? What are the, what's the freedom of the, of the starting and ending places? It's an area of geography where that service is enabled. It's a decent size of geography of territory. It's actually larger than, you know, the size of San Francisco. And, you know, within that you have, you know, you have full freedom of selecting where you want to go. You know, of course there are some, and on your app, you get a map. You tell the car where you want to be picked up, and where you want the car to pull over and pick you up. And then you tell it where you want to be dropped off. All right. And of course there are some exclusions, right? You want to be, you know, where, in terms of where the car is allowed to pull over. Right. So, you know, that you can do, but besides that, it's amazing. It's not like a fixed, just would be very, I guess, I don't know, maybe that's what's the question behind your question. But it's not a, you know, preset set of, you know, just. So within the geographic constraints, within that area, anywhere else, it can be, it can be picked up and dropped off anywhere. That's right. And, you know, people use them on like all kinds of trips. They, we have, and we have an incredible spectrum of riders. I mean, I think the youngest actually have car seats them. And we have, you know, people taking their kids on rides. I think the youngest riders we had on cars are, you know, one or two years old, you know, and the full spectrum of use cases. People can take them to, you know, schools to, you know, go grocery shopping, to restaurants, to bars, you know, run errands, you know, go shopping, et cetera, et cetera, you can go to your office, right? Like the full spectrum of use cases. And people, you know, use them in their daily lives to get around. And we see all kinds of, you know, really interesting use cases. And that, that, that's providing us incredibly valuable experience that, that we then, you know, use to improve our product. So as somebody who's been done a few long errands with Joe Rogan and others about the toxicity of the internet and the comments and the negativity in the comments, I'm fascinated by feedback. I, I believe that most people are good and kind and intelligent and can provide like, even in disagreement, really fascinating ideas. So on a product side, it's fascinating to me, like, how do you get the richest possible user feedback? Like to improve, what's, what are the channels that you use to measure? Because like you're, you're no longer, that's one of the magical things about autonomous vehicles. It's not, like it's frictionless interaction with the human. So like you don't get to, you know, it's just giving a ride. So like, how do you get feedback from people to, in order to improve? Oh yeah. Great question. Various mechanisms. So as part of the normal flow, we ask people for feedback. They, as the car is driving around, we have on the phone and in the car, and we have a touchscreen in the car, you can actually click some buttons and provide real time feedback on how the car is doing and how the car is handling a particular situation, you know, both positive and negative. So that's one channel. We have, as we discussed, customer support or life help, where, you know, if a customer wants to, has a question or he has some sort of concern, they can talk to a person in real time. So that, that is another mechanism that gives us feedback. At the end of a trip, you know, we also ask them how things went. They give us comments and, you know, star rating. And, you know, if it's, we also, you know, ask them to explain what, you know, went well and, you know, what could be improved. And we have our writers providing very rich feedback. They're a lot, a large fraction is very passionate and very excited about this technology. So we get really good feedback. We also run UXR studies, right? You know, specific that are kind of more, you know, go more in depth. And we will run both kind of lateral and longitudinal studies where we have deeper engagement with our customers. You know, we have our user experience research team tracking over time. That's things about a large unit, you know, it's cool. That's exactly right. And, you know, that's another really valuable feedback, source of feedback. And we're just covering a tremendous amount, right? People go grocery stroking and they like want to load, you know, 20 bags of groceries in our cars. And like, that's one workflow that you maybe don't, you know, think about, you know, getting just right when you're building the driverless product. I have people, like, you know, who bike as part of their trip. So they, you know, bike somewhere, then they get on our cars, they take apart their bike, they load into our vehicle, then they go, and that's, you know, how they, you know, where we want to pull over and how that, you know, get in and get out. Process works, provides very useful feedback. In terms of, you know, what makes a good pickup and drop off location? We get really valuable feedback. And in fact, we had to do some really interesting work with high definition maps and thinking about walking directions. And if you imagine you're in a store, right, in some giant space, and then, you know, you want to be picked up somewhere. Like, if you just drop a pin at a current location, which is maybe in the middle of a shopping mall, like what's the best location for the car to come pick you up? And you can have simple heuristics where you're just going to take your, you know, you clean in distance and find the nearest spot where the car can pull over that's closest to you, but oftentimes that's not the most convenient one. You know, I have many anecdotes where that heuristic breaks in horrible ways. One example that I often mention is somebody wanted to be, you know, dropped off in Phoenix and, you know, we picked a location that was close, the closest to there, you know, where the pin was dropped on the map in terms of latitude and longitude. But it happened to be on the other side of a parking lot that had this row of cacti, and the poor person had to, like, walk all around the parking lot to get to where they wanted to be in 110-degree heat. So that, you know, that was a bottom-up. So then, you know, we took all of these, all of that feedback from our users and incorporated into our system and improved it. Yeah, I feel like that's, like, requires AGI to solve the problem of, like, when you're, which is a very common case, when you're in a big space of some kind, like apartment building, it doesn't matter. It's some large space. And then you call the, like, the Waymo from there, right? Like, whatever, it doesn't matter, rideshare vehicle. And, like, where is the pin supposed to drop? I feel like that's, you don't think, I think that requires AGI. I'm going to have to, in order to solve, okay, the alternative, which I think the Google search engine has taught, is, like, there's something really valuable about the perhaps slightly dumb answer, but a really powerful one, which is, like, what was done in the past by others? Like, what was the choice made by others? That seems to be, like, in terms of Google search, when you have, like, billions of searches, you could see which, like, when they recommend what you might possibly mean, they suggest based on not some machine learning thing, which they also do, but, like, on what was successful for others in the past and finding a thing that they were happy with. Is that integrated at all with Waymo, like, what pickups work for others? It is. I think you're exactly right. So there's, really, it's an interesting problem. Naive solutions have interesting failure modes. So there's definitely lots of things that can be done to improve and both learning from, you know, what works, what doesn't work in actual hail, from, you know, getting richer data and getting more information about the environment and, you know, richer maps. But you're absolutely right that there's something, I think there's some properties of solutions that, in terms of the effect that they have on users, so much, much, much better than others, right? And predictability and understandability is important, so you can have maybe something that is not quite as optimal, but is very natural and predictable to the user and kind of works the same way all the time. And that matters. That matters a lot for the user experience. But, you know, to get to the basics, the pretty fundamental property is that the car actually arrives where you told it to arrive. Like, you can always, you know, change it, see it on the map and you can move it around if you don't like it. And, but like that property that the car actually shows up on pin is critical. Which, you know, we're compared to some of the human-driven analogs, I think, you know, you can have more predictability. It's actually the fact, if I have a little bit of a detour here, I think the fact that it's, you know, your phone and the car's two computers talking to each other can lead to some really interesting things we can do in terms of the user interfaces, both in terms of function, like the car actually shows up exactly where you told it you want it to be. But also some, you know, really interesting things on the user interface. I think as the car is driving, as you, you know, call it and it's on the way to come pick you up, and of course you get the position of the car and the route on the map, but, and they actually follow that route, of course, but it can also share some really interesting information about what it's doing. So, you know, our cars, as they are coming to pick you up, if it's come, if a car is coming up to a stop sign, it will actually show you that like it's there sitting, because it's at a stop sign or a traffic light, will show you that it's got, you know, sitting at a red light. So, you know, they look little things, right? But it's, I find those little touch touches really interesting, really magical. And it's just, you know, little things like that, that you can do to kind of delight your users. You know, this makes me think of, there's some products that I just love, like there's a company called Rev, Rev.com, where like for this podcast, for example, I can drag and drop a video, and then they do all the captioning. It's humans doing the captioning, but they connect, they automate everything of connecting you to the humans, and they do the captioning, transcription, it's all effortless. And it like, I remember when I first started using them, it was like, life is good, like, because it was so painful to figure that out earlier. The same thing with something called Isotope RX, this company I use for cleaning up audio, like the sound cleanup they do, it's like drag and drop and it just cleans everything up very nicely. Another experience like that I had with Amazon OneClick purchase, first time, I mean, other places do that now, but just the effortlessness of purchasing, making it frictionless. It kind of communicates to me, like I'm a fan of design, I'm a fan of products, that you can just create a really pleasant experience, the simplicity of it, the elegance just makes you fall in love with it. So, do you think about this kind of stuff? I mean, that's exactly what we've been talking about. It's like the little details that somehow make you fall in love with the product. Is that we went from like urban challenge days where love was not part of the conversation probably, and to this point where there's human beings and you want them to fall in love with the experience. Is that something you're trying to optimize for, try to think about, like, how do you create experience that people love? Oh, absolutely. I think that's the vision, is removing any friction or complexity from getting our users, our writers, to where they want to go. Making that as simple as possible. And then beyond that, just transportation, making things and goods get to their destination as seamlessly as possible. I talked about a drag and drop experience where I could have expressed your intent and then it just magically happens. And for our writers, that's what we're trying to get to, is you download an app and you click and car shows up. It's the same car. It's very predictable. It's a safe and high quality experience. And then it gets you in a very reliable, very convenient, frictionless way to where you want to be. And along the journey, I think we also want to do little things to delight our users. Like the ride sharing companies, because they don't control the experience, I think they can't make people fall in love necessarily with the experience. Or maybe they haven't put in the effort. But I think if I were to speak to the ride sharing experience I currently have, it's just very convenient. But there's a lot of room for falling in love with it. Like we can speak to sort of car companies. Car companies do this well. You can fall in love with a car and be like a loyal car person, like whatever. Like I like badass hot rods, I guess 69 Corvette. And at this point, you can't really, cars are so, owning a car is so 20th century, man. But is there something about the way more experience where you hope that people will fall in love with it? Is that part of it? Or is it just about making a convenient ride, not ride sharing, I don't know what the right term is, but just a convenient A to B autonomous transport? Or do you want them to fall in love with Waymo? So maybe elaborate a little bit. I mean, almost like from a business perspective, I'm curious. Like, do you want to be in the background invisible? Or do you want to be like a source of joy that's very much in the foreground? I want to provide the best, most enjoyable transportation solution. And that means building it, building our product and building our service in a way that people do. Kind of use in a very seamless, frictionless way in their day to day lives. And I think that does mean, in some way, falling in love in that product, just kind of becomes part of your routine. It comes down in my mind to safety, predictability of the experience. And privacy aspects of it, right? Cars, you get the same car, you get very predictable behavior, and that is important, I think if you're going to use it in your daily life. Privacy, and when you're in a car, you can do other things. You're spending a bunch, just another space where you're spending a significant part of your life. And so not having to share it with other people who you don't want to share it with, I think is a very nice property. Maybe you want to take a phone call or do something else in the vehicle. And safety on the quality of the driving, as well as the physical safety of not having to share that ride is important to a lot of people. What about the idea that when there's somebody, like a human driving, and they do a rolling stop on a stop sign, sometimes you get an Uber, Lyft, or whatever, human driver, and they can be a little bit aggressive as drivers. It feels like not all aggression is bad. Now, that may be a wrong, again, 20th century conception of driving. Maybe it's possible to create a driving experience. If you're in the back busy doing something, maybe aggression is not a good thing. It's a very different kind of experience, perhaps. But it feels like in order to navigate this world, you need to, how do I phrase this? You need to kind of bend the rules a little bit, or at least test the rules. I don't know what language politicians use to discuss this, but whatever language they use, you flirt with the rules, I don't know. But you sort of have a bit of an aggressive way of driving, that asserts your presence in this world, thereby making other vehicles and people respect your presence. And thereby allowing you to sort of navigate through intersections in a timely fashion. I don't know if any of that made sense, but how does that fit into the experience of driving autonomously? Is that- Thanks a lot, this is your hitting on a very important point of a number of behavioral components and parameters that make your driving feel assertive and natural, comfortable, and predictable. Now our cars will follow rules, right? They will do the safest thing possible in all situations, let me be clear on that. But if you think of really, really good drivers, just think about professional limo drivers, right? They will follow the rules, they're very, very smooth, and yet they're very efficient, but they're assertive. They're comfortable for the people in the vehicle, they're predictable for the other people outside the vehicle that they share the environment with. And that's the kind of driver that we want to build. And you just need to think, if maybe there's a sport analogy there, right? You can do in very many sports, the true professionals are very efficient in their movements, right? They don't do like a hectic flailing, right? They're smooth and precise, right? And they get the best results. So that's the kind of driver that we want to build. In terms of aggressiveness, yeah, you can roll through the stop signs, you can do crazy lane changes. It typically doesn't get you to your destination faster, typically not the safest or most predictable, most comfortable thing to do. But there is a way to do both, and that's what we're doing, we're trying to build a driver that is safe, comfortable, smooth, and predictable. Yeah, that's a really interesting distinction. I think in the early days of autonomous vehicles, the vehicles felt cautious as opposed to efficient. And still probably, but when I rode in the Waymo, I mean, it was quite assertive. It moved pretty quickly. Like, yeah, then one of the surprising feelings was that it actually, it went fast, and it didn't feel like awkwardly cautious than autonomous vehicles. So I've also programmed autonomous vehicles, and everything I've ever built was felt awkwardly, either overly aggressive, okay, especially when it was my code, or like awkwardly cautious is the way I would put it. And Waymo's vehicle felt like assertive and I think efficient is like the right terminology here. It wasn't, and I also like the professional limo driver, because we often think like, you know, an Uber driver or a bus driver or a taxi. This is the funny thing, people think they track taxi drivers or professionals. I mean, it's like, that's like saying I'm a professional walker just because I've been walking all my life. I think there's an art to it, right? And if you take it seriously as an art form, then there's a certain way that mastery looks like. It's interesting to think about what does mastery look like in driving. And perhaps what we associate with like aggressiveness is unnecessary. Like it's not part of the experience of driving. It's like unnecessary fluff, that efficiency. You can be, you can create a good driving experience within the rules. That's, I mean, you're the first person to tell me this, so it's kind of interesting. I need to think about this, but that's exactly what it felt like with Waymo. I kind of had this intuition, maybe it's the Russian thing, I don't know, that you have to break the rules in life to get anywhere. But maybe, maybe it's possible that that's not the case in driving. I have to think about that. But it certainly felt that way on the streets of Phoenix when I was there in Waymo. That was a very pleasant experience and it wasn't frustrating in that like, come on, move already kind of feeling. It wasn't, that wasn't there. Yeah, I mean, that's what we're going after. I don't think you have to pick one. I think truly good driving, it gives you both efficiency, assertiveness, but also comfort and predictability and safety. And that's what fundamental improvements in the core capabilities truly unlock. And you can kind of think of it as a precision and recall trade-off. You have certain capabilities of your model and then it's very easy when you have some curve of precision and recall, you can move things around and can choose your operating point and you're trading off precision versus recall false positives versus false negatives. But then, and you can tune things on that curve and be kind of more cautious or more aggressive but then aggressive is bad or cautious is bad. But true capabilities come from actually moving the whole curve up and then you are kind of on a very different plane of those trade-offs. And that's what we're trying to do here is to move the whole curve up. Before I forget, let's talk about trucks a little bit. So I also got a chance to check out some of the Waymo trucks. I'm not sure if we want to go too much into that space, but it's a fascinating one. So maybe we can mention at least briefly, Waymo is also now doing autonomous trucking and how different like philosophically and technically is that whole space of problems. That's one of our two big products and commercial applications of our driver, right? Right hailing and deliveries. We have Waymo 1 and Waymo via moving people and moving goods. Trucking is an example of moving goods. We've been working on trucking since 2017. It is a very interesting space and your question of how different is it. It has this really nice property that the first order challenges like the science, the hard engineering, whether it's hardware or onboard software or offboard software, all of the systems that you build for training your ML models for evaluating your system. Like those fundamentals carry over. The true challenges of driving, perception, semantic understanding, prediction, decision making, planning, evaluation, the simulator, ML infrastructure, those carry over. The data and the application and the domains might be different, but the most difficult problems, all of that carries over between the domains. So that's very nice. So that's how we approach it. We're kind of built investing in the core, the technical core, and then there's specialization of that core technology to different product lines, to different commercial applications. So just to tease it apart a little bit, on trucks, so starting with the hardware. The configuration of the sensors is different. They're different physically, geometrically, different vehicles. So for example, we have two of our main laser on the trucks on both sides so that we don't have the blind spots. Whereas on the JLR, I-PACE, we have one of it sitting at the very top, but the actual sensors are almost the same, or largely the same. So all of the investment that over the years we've put into building our custom lighters, custom radars, pulling the whole system together, that carries over very nicely. Then on the perception side, the fundamental challenges of seeing, understanding the world, whether it's object detection, classification, tracking, semantic understanding, all that carries over. Yes, there's some specialization when you're driving on freeways. Range becomes more important. The domain is a little bit different. But again, the fundamentals carry over very, very nicely. Same and you get into prediction or decision making. The fundamentals of what it takes to predict what other people are going to do, to find the long tail, to improve your system in that long tail of behavior prediction and response, that carries over, right? And so on and so on. So I mean, that's pretty exciting. By the way, does Waymo VIA include using the smaller vehicles for transportation goods? It's an interesting distinction. So I would say there's three interesting modes of operation. So one is moving humans, one is moving goods, and one is like moving nothing. So zero occupancy, meaning like you're going to the destination. You're MTV equal. I mean, it's the third is the less of a, that's the entirety of it. It's less exciting from the commercial perspective. Well, I mean, in terms of like, if you think about what's inside a vehicle as it's moving, because it does, you know, some significant fraction of the vehicle's movement has to be empty. I mean, it's kind of fascinating. Maybe just on that small point, is there different control and like policies that are applied for a zero occupancy vehicle? The vehicle with nothing in it? Or is it just move as if there is a person inside? What was with some subtle differences? As a first order approximation, there are no differences. And if you think about, you know, safety and, you know, comfort and quality of driving, only part of it, it has to do with the, you know, the people or the goods inside of the vehicle. I mean, you don't want to be, you know, you want to drive smoothly, as we discussed, not for the purely for the benefit of whatever you have inside the car, right? It's also for the benefit of the people outside kind of feeding, fitting naturally and predictably into the whole environment, right? So you know, yes, there's some second order things you can do. You can change your route and optimize maybe kind of your fleet, things at the fleet scale, and you would take into account whether some of your cars are actually serving a useful trip whether with people or with goods, whereas, you know, other cars are driving completely empty to that next valuable trip that they're going to provide. But those are mostly second order effects. Okay, cool. So Phoenix is an incredible place. Something like you've announced in Phoenix is, it's kind of amazing, but you know, that's just like one city. How do you take over the world? I mean, I'm asking for a friend. One step at a time. Pinky, is that the cartoon pinky in the brain? Yeah. Okay. But you know, gradually is a true answer. So I think the heart of your question is, can you ask a better question than I asked? Great question. Answer that one. I'm just going to phrase it in the terms that I want to answer. Perfect. This is exactly right. Brilliant. Please. You know, where are we today? And you know, what happens next? And what does it take to go beyond Phoenix? And what does it take to get this technology to more places and more people around the world? So our next big area of focus is exactly that. Larger scale commercialization and just scaling up. If I think about the main and your Phoenix gives us that platform and gives us that foundation of upon which we can build. And it's there are few really challenging aspects of this whole problem that you have to pull together in order to build the technology, in order to deploy it into the field, to go from driverless car to a fleet of cars that are providing a service and then all the way to commercialization. And this is what we have in Phoenix. We've taken the technology from a proof point to an actual deployment and have taken our driver from one car to a fleet that can provide a service. Beyond that, if I think about what it will take to scale up and deploy in more places with more customers, I tend to think about three main dimensions, three main axes of scale. One is the core technology, the hardware and software core capabilities of our driver. The second dimension is evaluation and deployment. And the third one is the product, commercial and operational excellence. So you can talk a bit about where we are along each one of those three dimensions about where we are today and what will happen next. The core technology on the hardware and software together, comprised of driver, we obviously have that foundation that is providing fully driverless trips to our customers as we speak, in fact. And we've learned a tremendous amount from that. So now what we're doing is we are incorporating all those lessons into some pretty fundamental improvements in our core technology, both on the hardware side and on the software side, to build a more general, more robust solution that then will enable us to massively scale beyond Phoenix. So on the hardware side, all of those lessons are now incorporated into this fifth generation hardware platform that is being deployed right now. And that's the platform, the fourth generation, the thing that we have right now driving in Phoenix is good enough to operate fully driverless, night and day, in various speeds and various conditions. But the fifth generation is the platform upon which we want to go to massive scale. We've really made qualitative improvements in terms of the capability of the system, the simplicity of the architecture, the reliability of the redundancy. It is designed to be manufacturable at very large scale and provides the right unit economics. So that's the next big step for us on the hardware side. That's already there for scale, version five. Is that coincidence or should we look into a conspiracy theory that it's the same version as the Pixel phone? Is that what's the hardware? I can neither confirm or I have to know how it looks. All right, cool. So that's the, okay, that's that axis. What else? So similarly, the hardware is a very discreet jump, but similar to how we're making that change from the fourth generation hardware to the fifth, we're making similar improvements on the software side to make it more robust and more general and allow us to quickly scale beyond Phoenix. So that's the first dimension of core technology. The second dimension is evaluation and deployment. How do you measure your system? How do you evaluate it? How do you build a release and deployment process where with confidence you can regularly release new versions of your driver into a fleet? How do you get good at it so that it is not a huge tax on your researchers and engineers? So how do you build all these processes? The frameworks, the simulation, the evaluation, the data science, the validation, so that people can focus on improving the system and the releases just go out the door and get deployed across the fleet. So we've gotten really good at that in Phoenix. That's been a tremendously difficult problem, but that's what we have in Phoenix right now that gives us that foundation. And now we're working on kind of incorporating all the lessons that we've learned to make it more efficient, to go to new places, you know, and scale up and just kind of, you know, stamp things out. So that's that second dimension of evaluation and deployment. And the third dimension is product, commercial and operational excellence, right? And again, Phoenix there is providing an incredibly valuable platform. That's why we're doing things end to end in Phoenix. We're learning, as we discussed a little earlier today, tremendous amount of really valuable lessons from our users getting really incredible feedback. And we'll continue to iterate on that and incorporate all those lessons into making our product even better and more convenient for our users. So you're converting this whole process of Phoenix in Phoenix into something that could be copy and pasted elsewhere. So like, perhaps you didn't think of it that way when you were doing the experimentation in Phoenix, but so how long did you basically, you can correct me, but you've, I mean, it's still early days, but you've taken a full journey in Phoenix, right? As you were saying, of like what it takes to basically automate. I mean, it's not the entirety of Phoenix, right? But I imagine it can encompass the entirety of Phoenix. That's some near term date, but that's not even perhaps important. Like as long as it's a large enough geographic area. So what, how copy pastable is that process currently? And how, like, you know, like when you copy and paste in Google docs, I think, no, or in Word, you can like apply source formatting or apply destination formatting. So when you copy and paste the Phoenix into like, say Boston, how do you apply the destination formatting? Like how much of the core of the entire process of bringing an actual public transportation, autonomous transportation service to a city is there in Phoenix that you understand enough to copy and paste into Boston or wherever. So we're not quite there yet. We're not at a point where we're kind of massively copying and pasting all over the place. But Phoenix, what we did in Phoenix, and we very intentionally have chosen Phoenix as our first full deployment area, you know, exactly for that reason to kind of tease the problem apart, look at each dimension, focus on the fundamentals of complexity and de-risking those dimensions, and then bringing the entire thing together to get all the way, you know, force ourselves to learn all those hard lessons on, you know, on this technology, hardware and software, on the evaluation deployment, on, you know, operating a service, operating a business using actually serving our customers, all the way so that we're fully informed about the most difficult, most important challenges to get us to that next step of massive copy and pasting, as you said. And that's what we're doing right now. We're incorporating all those things that we learned into that next system that then will allow us to kind of copy and paste all over the place and to massively scale to, you know, more users and more locations. And, you know, just talked a little bit about, you know, what does that mean along those different dimensions? So on the hardware side, for example, again, it's that switch from the fourth to the fifth generation. And the fifth generation is designed to kind of have that property. Can you say what other cities you're thinking about? Like I'm thinking about sorry, San Francisco now, I thought I want to move to San Francisco, but I'm thinking about moving to Austin. I don't know why people are not being very nice about San Francisco currently. Maybe it's a small, it's maybe it's in vogue right now. But Austin seems I visited there and it was I was in a Walmart. It's funny, these moments like turn your life. There's this very nice woman with kind eyes just like stopped and said, he looks so handsome in that tie, honey, to me. This has never happened to me in my life, but just the sweetness of this woman is something I've never experienced, certainly in the streets of Boston. But even in San Francisco, where people wouldn't, that's just not how they speak or think. I don't know. There's a warmth to Austin that love. And since Waymo does have a little bit of a history there, is that a possibility? Is this your version of asking the question of like, you know, Dimitri, I know you can't share your commercial and deployment roadmap, but I'm thinking about moving to San Francisco of Austin, like blink twice if you think I should move to. That's true. That's true. You got me. We've been testing in all over the place. I think we've been testing more than 25 cities. We drive in San Francisco, we drive in Michigan for snow. We are doing significant amount of testing in the Bay Area, including San Francisco. Which is not like, because we're talking about the very different thing, which is like a full on large geographic area, public service. You can't share. Okay. What about Moscow? When is that happening? Take on Yandex. I'm not paying attention to those folks. They're doing, you know, there's, there's a lot of fun. I mean, maybe as a way of a question, you didn't speak to sort of like policy or like, is there tricky things with government and so on? Like is there other friction that you've encountered except sort of technological friction of solving this very difficult problem? Is there other stuff that you have to overcome when deploying a public service in a city? That's interesting. It's very important. So we put significant effort in creating those partnerships and, you know, those relationships with governments at all levels, you know, local governments, municipalities, you know, state level, federal level. We've been engaged in very deep conversations from the earliest days of our projects. Whenever, at all of these levels, you know, whenever we go to test or, you know, operate in a new area, you know, we always lead with, you know, with a conversation with the local officials. And, but the result of that, that investment is that no, it's not challenges we have to overcome it, but it isn't a very important that we continue to have this conversation. Oh, yeah. I love politicians too. Okay. So Mr. Elon Musk said that LIDAR is a crutch. What are your thoughts? I wouldn't characterize it exactly that way. I know. I think LIDAR is very important. It is a key sensor that, you know, we use just like other modalities, right? As we discussed, our cars use cameras, LIDARs, and radars. They are all very important. They are at the kind of the physical level. They are very different. They have very different, you know, physical characteristics. Cameras are passive, LIDARs and radars are active, use different wavelengths. So that means they complement each other very nicely. And together combined, they can be used to build a much safer and much more capable system. So to me, it's more of a question, you know, why the heck would you handicap yourself and not use one or more of those sensing modalities when they undoubtedly just make your system more capable and safer. Now, you know, what might make sense for one product or one business might not make sense for another one. So if you're talking about driver assist technologies, you make certain design decisions and you make certain tradeoffs and make different ones if you are building a driver that deploy in fully driverless vehicles. And LIDAR specifically, when this question comes up, I typically the criticisms that I hear are the counterpoints that cost and aesthetics. And I don't find either of those honestly very compelling. So on the cost side, there's nothing fundamentally prohibitive about the cost of LIDARs. Radars used to be very expensive before people made certain advances in technology and started to manufacture them massive scale and deployment vehicles, right? Similar with LIDARs. And this is where the LIDARs that we have on our car, especially the fifth generation, we've been able to make some pretty qualitative discontinuous jumps in terms of the fundamental technology that allow us to manufacture those things at very significant scale and add a fraction of the cost of both our previous generation, as well as a fraction of the cost of what might be available on the market off the shelf right now. And that improvement will continue. So I think cost is not a real issue. Second one is aesthetics. I don't think that's a real issue either. Beauty is an eye of the beholder. You can make LIDAR sexy again. I think you're exactly right. I think it is sexy. Like honestly, I think form whole function. You know, I was actually somebody brought this up to me. I mean, all forms of LIDAR, even like the ones that are like big, you can make look beautiful. There's no sense in which you can't integrate into design. There's all kinds of awesome designs. I don't think small and humble is beautiful. It could be brutalism or it could be harsh corners. I mean, like I said, hot rods. I don't necessarily like, oh man, I'm going to start so much controversy with this. I don't like Porsches. The Porsche 911. Like everyone says the most beautiful, no, no, it's like a baby car. It doesn't make any sense. But everyone, it's beauty is an eye of the beholder. You're already looking at me like, what's this kid talking about? I'm happy to talk about. You're digging your own hole. The form and function and my take on the beauty of the hardware that we put on our vehicles. You know, I will not comment on the Porsche. You know, Porsche monologue. Okay. All right. So, but aesthetics, fine. But there's an underlying like philosophical question behind the kind of lighter question is like how much of the problem can be solved with computer vision, with machine learning. So I think without sort of disagreements and so on, it's nice to put it on the spectrum because Waymo is doing a lot of machine learning as well. It's interesting to think how much of driving if we look at five years, 10 years, 50 years down the road, what can be learned in almost more and more and more end to end way. If you look at what Tesla is doing with as a machine learning problem, they're doing a multitask learning thing where it's just they break up driving into a bunch of learning tasks and they have one single neural network and they're just collecting huge amounts of data that's training that. I've recently hung out with George Hotz. I don't know if you know George. I love him so much. He's just an entertaining human being. We were off mic talking about Hunter S. Thompson. He's the Hunter S. Thompson of autonomous driving. Okay. So he, I didn't realize this with comma AI, but they're like really trying to end to end. They're the machine, like looking at the machine learning problem, they're really not doing multitask learning, but it's computing the drivable area as a machine learning task and hoping that like down the line, this level two system, this driver assistance will eventually lead to allow you to have a fully autonomous vehicle. Okay. There's an underlying deep philosophical question there, technical question of how much of driving can be learned. So LIDAR is an effective tool today for actually deploying a successful service in Phoenix, right? That's safe, that's reliable, et cetera, et cetera. But the question, and I'm not saying you can't do machine learning in LIDAR, but the question is that like how much of driving can be learned eventually? Can we do fully autonomous that's learned? You know, learning is all over the place and plays a key role in every part of our system. As you said, I would decouple the sensing modalities from the ML and the software parts of it. LIDAR, radar, cameras, like it's all machine learning. All of the object detection classification, of course, like that's what these modern deep nets and kind of nuts are very good at. You feed them raw data, massive amounts of raw data, and that's actually what our custom build LIDARs and radars are really good at. And radars, they don't just give you point estimates of objects in space, they give you raw physical observations. And then you take all of that raw information, there's colors of the pixels, whether it's LIDAR's returns and some other information, it's not just distance, right? And angle and distance is much richer information that you get from those returns plus really rich information from the radars. You fuse it all together and you feed it into those massive ML models that then lead to the best results in terms of object detection classification, state estimation. So there's a side to interrupt, but there is a fusion. I mean, that's something that people didn't do for a very long time, which is like at the sensor fusion level, I guess, like early on fusing the information together whether so that the sensory information that the vehicle receives from the different modalities or even from different cameras is combined before it is fed into the machine learning models. Yeah, so I think this is one of the trends. You're seeing more of that. You mentioned N10, there's different interpretation of N10. There is kind of the purest interpretation of I'm going to like have one model that goes from raw sensor data to like, you know, steering torque and, you know, gas brakes. That's too much. I don't think that's the right way to do it. There's more smaller versions of N10, where you're kind of doing more end-to-end learning or core training or depropagation of kind of signals back and forth across the different stages of your system. There's really good ways it gets into some fairly complex design choices where on one hand you want modularity and the composability of your system. But on the other hand, you don't want to create interfaces that are too narrow or too brittle, too engineered, where you're giving up on the generality of the solution, or you're unable to properly propagate signal, you know, reach signal forward and losses and, you know, back so you can optimize the whole system jointly. So I would decouple, and I guess what you're seeing in terms of the fusion of the sensing data from different modalities, as well as kind of fusion in the temporal level going more from, you know, frame by frame, where, you know, you would have one net that would do frame by frame detection in camera. And then, you know, something that does frame by frame and lighter and then radar, and then you fuse it, you know, in a weaker engineered way later. The field over the last, you know, decade has been evolving in more kind of joint fusion, more end-to-end models that are solving some of these tasks, you know, jointly. And there's tremendous power in that. And, you know, that's the progression that kind of our technology, our stack has been on as well. Now, to your, you know, so I would decouple the kind of sensing and how that information is used from the role of ML in the entire stack. And, you know, I guess it's, there's trade-offs and, you know, modularity and how do you inject inductive bias into your system, right? This is, there's tremendous power in being able to do that. So, you know, we have, there's no part of our system that is not heavily, that does not heavily leverage data-driven development or state of the art ML. Whether it's mapping, whether it's a simulator, whether it's perception, you know, object level, you know, perception, whether it's semantic understanding, prediction, decision making, you know, so forth and so on. It's and, of course, object detection and classification, like you're finding pedestrians and cars and cyclists and, you know, cones and signs and vegetation and being very good at estimating kind of detection, classification and state estimation. Those are just stable stakes. Like, that's step zero of this whole stack. You can be incredibly good at that, whether you use cameras or light as a radar, but that's just, you know, that's stable stakes. That's just step zero. Beyond that, you get into the really interesting challenges of semantic understanding, the perception level. You get into scene-level reasoning. You get into very deep problems that have to do with prediction and joint prediction and interaction, so it'll interact between all of the actors in the environment, pedestrians, cyclists, other cars, and you get into decision making, right? So how do you build a lot of systems? So, we leverage ML very heavily in all of these components. I do believe that the best results you achieve by kind of using a hybrid approach and having different types of ML, having different models with different degrees of inductive bias that you can have, and combining kind of model-free approaches with some model-based approaches and some rule-based, physics-based systems. So one example I can give you is traffic lights. There's a problem of the detection of traffic light state, and obviously that's a great problem for computer vision. Confinets are, you know, that's their bread and butter, right? That's how you build that. But then the interpretation of a traffic light, you're going to need to learn that, right? You don't need to build some complex ML model that infers with some precision and recall that red means stop. It's a very clear engineered signal with very clear semantics, right? So you want to induce that bias, like how you induce that bias and that whether it's a constraint or a cost function in your stack. But it is important to be able to inject that clear semantic signal into your stack. That's what we do. But then the question of like, and that's when you apply it to yourself, when you are making decisions, whether you want to stop for a red light or not. But if you think about how other people treat traffic lights, we're back to the ML version of that. You know they're supposed to stop for a red light, but that doesn't mean they will. So then you're back in the very heavy ML domain where you're picking up on very subtle keys about they have to do with the behavior of objects, pedestrians, cyclists, cars, and the whole thing, the entire configuration of the scene that allow you to make accurate predictions on whether they will in fact stop or run a red light. So it sounds like already for Waymo, like machine learning is a huge part of the stack. So it's a huge part of like, not just, so obviously the first level zero or whatever you said, which is like just the object detection of things that you know, with no other machine learning you can do, but also starting to do prediction behavior and so on to model what other parties in the scene, entities in the scene are going to do. So machine learning is more and more playing a role in that as well. Of course. Absolutely. I think we've been going back to the earliest days, like the DARPA Grand Challenge and team was leveraging machine learning. I was like pre-image nut and I was very different type of ML. And I think actually it was before my time, but the Stanford team during the Grand Challenge had a very interesting machine learned system that would use lighter and camera when driving in the desert. And we had built the model where it would kind of extend the range of free space reasoning. We get a clear signal from lighter and then it had a model that said, hey, like this stuff on camera kind of sort of looks like this stuff in lighter. And I know this stuff that I've seen in lighter, I'm very confident that it's free space. So let me extend that free space zone into the camera range that would allow the vehicle to drive faster. And then we've been building on top of that and kind of staying and pushing the state of the art in ML in all kinds of different ML over the years. And in fact, from the earliest days, I think 2010 is probably the year where Google, maybe 2011 probably, got pretty heavily involved in machine learning, kind of deep nuts. And at that time, it was probably the only company that was very heavily investing in kind of state of the art ML and self-driving cars. And they go hand in hand. And we've been on that journey ever since. We're pushing a lot of these areas in terms of research at Waymo and we collaborate very heavily with the researchers in Alphabet and all kinds of ML, supervised ML, unsupervised ML, published some interesting research papers in the space, especially recently. It's just super, super active. Yeah, super, super active. Of course, there is kind of the more mature stuff like, you know, ConvNets for object detection. But there's some really interesting, really active work that's happening and more and bigger models and models that have more structure to them, not just large bitmaps and reasonable temporal sequences. And some of the interesting breakthroughs that we've seen in language models, right? Transformers, GPT, 3N friends. There's some really interesting applications of some of the core breakthroughs to those problems of behavior prediction as well as decision making and planning. You can think about it, kind of the behavior, how the path, the trajectories, how people drive and they have kind of share a lot of the fundamental structure of this problem. There's sequential nature. There's a lot of structure in this representation. There is a strong locality, kind of like in sentences, words that follow each other. They're strongly connected, but there are also kind of larger context that doesn't have that locality and you also see that in driving, right? What's happening in the scene as a whole has very strong implications on the next step in that sequence, whether you're predicting what other people are going to do, whether you're making your own decisions, or whether in the simulator, you're building generative models of humans walking, cyclists riding, the car is driving. That's all really fascinating. Like how it's fascinating to think that transformer models and all the breakthroughs in language and NLP that might be applicable to like driving at the higher level, at the behavioral level. That's kind of fascinating. Let me ask about pesky little creatures called pedestrians and cyclists. They seem so humans are a problem. If we can get rid of them, I would. But unfortunately, they're all sort of a source of joy and love and beauty. So let's keep them around. They're also our customers. Oh, for your perspective. Yes, yes, for sure. There's also money. Very good. I don't even know where I was going. Oh yes, pedestrians and cyclists. They're a fascinating injection into the system of uncertainty of like a game theoretic dance of what to do. And also they have perceptions of their own and they can tweet about your product so you don't want to run them over from that perspective. I mean, I don't know. I'm joking a lot, but I think in seriousness, pedestrians are a complicated computer vision problem, a complicated behavioral problem. Is there something interesting you could say about what you've learned from a machine learning perspective from also an autonomous vehicle and a product perspective about just interacting with the humans in this world? Yeah. In the United States on record, we care deeply about the safety of pedestrians, even the ones that don't have Twitter accounts. Thank you. All right, cool. Not me. But yes, I'm glad somebody does. But in all seriousness, safety of vulnerable road users, pedestrians or cyclists is one of our highest priorities. We do a tremendous amount of testing and validation and put a very significant emphasis on the capabilities of our systems that have to do with safety around those unprotected vulnerable road users. Cars just discussed earlier in Phoenix, we have completely empty cars, completely driverless cars, driving in this very large area and some people use them to go to school. So they'll drive through school zones. The kids are kind of the very special class of those vulnerable road users. You want to be super, super safe and super, super cautious around those. So we take it very, very, very seriously. And what does it take to be good at it? An incredible amount of performance across your whole stack. Just with hardware, and again, you want to use old sensing of modalities available to you. Imagine driving on a residential road at night and kind of making a turn and you don't have headlights covering some part of the space and a kid might run out. And lighters are amazing at that. They see just as well in complete darkness as they do during the day. So again, it gives you that extra margin in terms of capability and performance and safety and quality. And in fact, we oftentimes in these kinds of situations, we have our system detect something in some cases even earlier than our trained operators in the car might do, especially in conditions like very dark nights. So it starts with sensing. Then perception has to be incredibly good. And you have to be very, very good at detecting pedestrians in all kinds of situations and all kinds of environments, including people in weird poses, people kind of running around and being partially occluded. So that's stuff number one. Then you have to have in very high accuracy and very low latency in terms of your reactions to what these actors might do. And we've put a tremendous amount of engineering and tremendous amount of validation in to make sure our system performs properly. And oftentimes it does require a very strong reaction to do the safe thing. We actually see a lot of cases like that. That's the long tail of really rare, really crazy events that contribute to the safety around pedestrians. And one example that comes to mind that we actually happened in Phoenix where we were driving along, and I think it was a 45 mile per hour road, so you have pretty high speed traffic. And there was a sidewalk next to it. And there was a cyclist on the sidewalk. And as we were in the right lane, right next to the sidewalk was a multi-lane road. So as we got close to the cyclist on the sidewalk, it was a woman. She tripped and fell. She just fell right into the path of our vehicle. And our car, this was actually with a test driver. Our test drivers did exactly the right thing. They reacted and came to stop it. It requires both very strong steering and strong application of the brake. And then we simulated what our system would have done in that situation, and it did exactly the same thing. And that speaks to all of those components of really good state estimation and tracking. And imagine a person on a bike and they're falling over, and they're doing that right in front of you. So you have to be really like things are changing. The appearance of that whole thing is changing. And a person goes one way, they're falling on the road, they're being flat on the ground in front of you. The bike goes flying the other direction. The two objects that used to be one are now splitting apart, and the car has to detect all of that. And milliseconds matter, and it's not good enough to just brake. You have to steer and brake, and there's traffic around you. So it all has to come together. And it was really great to see in this case and other cases like that that we're actually seeing in the wild, that our system is performing exactly the way that we would have liked and is able to avoid collisions like this. It's such an exciting space for robotics, like in that split second to make decisions of life and death. I don't know. The stakes are high in a sense, but it's also beautiful that for somebody who loves artificial intelligence, the possibility that an AI system might be able to save a human life, that's kind of exciting as a problem, like to wake up. It's terrifying probably for an engineer to wake up and to think about, but it's also exciting because it's in your hands. Let me try to ask a question that's often brought up about autonomous vehicles. And it might be fun to see if you have anything interesting to say, which is about the trolley problem. So a trolley problem is an interesting philosophical construct that highlights, and there's many others like it, of the difficult ethical decisions that we humans have before us in this complicated world. So specifically is the choice between if you were forced to choose to kill a group X of people versus a group Y of people, like one person, if you did nothing, you would kill one person, but if you would kill five people, and if you decide to swerve out of the way, you would only kill one person. You do nothing or you choose to do something. You can construct all kinds of sort of ethical experiments of this kind that I think at least on a positive note, inspire you to think about introspect what are the physics of our morality. And there's usually not good answers there. I think people love it because it's just an exciting thing to think about. I think people who build autonomous vehicles usually roll their eyes because this is not this one as constructed, this like literally never comes up in reality. You never have to choose between killing one or like one of two groups of people. But I wonder if you can speak to, is there something interesting to use an engineer of autonomous vehicles that's within the trolley problem? Or maybe more generally, are there difficult ethical decisions that you find that algorithm must make? On the specific version of the trolley problem, which one would you do if you're driving? The question itself is a profound question because we humans ourselves cannot answer it and that's the very point. I will kill both. I think you're exactly right and that humans are not particularly good. I think they kind of phrased this as like what would a computer do? But humans are not very good and actually oftentimes think that freezing and kind of not doing anything because like you've taken a few extra milliseconds to just process and then you end up like doing the worst of the possible outcomes. I do think that as you've pointed out, it can be a bit of a distraction and it can be a bit of a kind of red herring. I think it's an interesting discussion in the realm of philosophy. But in terms of how that affects the actual engineering and deployment of self-driving vehicles, it's not how you go about building a system. We have talked about how you engineer a system, how you go about evaluating the different components and the safety of the entire thing. How do you kind of inject the various model-based, safety-based arguments? And yes, you reason at parts of the system, you reason about the probability of a collision, the severity of that collision. And that is incorporated and you have to properly reason about the uncertainty that flows through the system. Those factors definitely play a role in how the cars then behave, but they tend to be more of the immersion behavior. And what do you see? You're absolutely right that these clear theoretical problems that they, you don't occur to that end system and really kind of being back to our previous discussion, like which one do you choose? Well, oftentimes you made a mistake earlier. You shouldn't be in that situation in the first place. In reality, the system comes up. If you build a very good, safe, and capable driver, you have enough clues in the environment that you drive defensively so you don't put yourself in that situation. And again, if you go back to that analogy of precision and recall, like, okay, you can make a very hard trade-off, but neither answer is really good. But what instead you focus on is kind of moving the whole curve up and then you focus on building the right capability and the right defensive driving so that you don't put yourself in a situation like this. I don't know if you have a good answer for this, but people love it when I ask this question about books. Are there books in your life that you've enjoyed, philosophical, fiction, technical, that had a big impact on you as an engineer or as a human being? Everything from science fiction to a favorite textbook. Is there three books that stand out that you can think of? Three books. So that impacted me. I would say, and this one is, you probably know it well, but not generally well known. I think in the US or kind of internationally, The Master and Margarita. It's one of actually my favorite books. It is by a Russian, it's a novel by a Russian author, Mikhail Bulgakov, and it's just a great book. It's a book that you can reread your entire life and it's very accessible. You can read it as a kid. The plot is interesting. It's the devil visiting the Soviet Union. You reread it at different stages of your life and you enjoy it for very different reasons and you keep finding deeper and deeper meaning. And it kind of affected, it definitely had an imprint on me, mostly from probably the cultural stylistic aspect. It makes you think one of those books that is good and makes you think, but also has this really silly, quirky, dark sense of humor. It captures the Russian soul. That's more than perhaps many other books. On that slight note, just out of curiosity, one of the saddest things is I've read that book in English. Did you by chance read it in English or in Russian? In Russian, only in Russian. And actually that is a question I had. I posed to myself every once in a while and I wonder how well it translates, if it translates at all. And there's the language aspect of it and then there's the cultural aspect. So I actually, I'm not sure if either of those would work well in English. Now I forget their names, but so when the COVID lifts a little bit, I'm traveling to Paris for several reasons. One is just I've never been in Paris. I want to go to Paris. But there's the most famous translators of Dostoyevsky Tolstoy of most of Russian literature lived there. There's a couple, they're famous, a man and woman, and I'm going to sort of have a series of conversations with them. And in preparation for that, I'm starting to read Dostoyevsky in Russian. So I'm really embarrassed to say that I read this. Everything I've read in Russian literature of like serious depth has been in English, even though I can also read, I mean, obviously in Russian, but for some reason it seemed in the optimization of life, it seemed the improper decision to do, to read in Russian. I don't need to think in English, not in Russian, but now I'm changing my mind on that. And so the question of how well it translate is a really fundamental one, even with Dostoyevsky. And from what I understand Dostoyevsky translates easier. Others don't as much. Obviously, the poetry doesn't translate as well. I'm also the music of big fan of Vladimir Vosotsky. He doesn't obviously translate well. People have tried. But Master Mung, I don't know. I don't know about that one. I just know it in English, you know, it's fun, fun as hell in English. So but it's a curious question and I want to study it rigorously from both the machine learning aspect and also because I want to do a couple of interviews in Russia that I'm still unsure of how to properly conduct an interview across a language barrier. It's a fascinating question that ultimately communicates to an American audience. There's a few Russian people that I think are truly special human beings. And I feel like I sometimes encounter this with some incredible scientists and maybe you encounter this as well at some point in your life that it feels like because of language barrier, their ideas are lost to history. It's a sad thing. I think about like Chinese scientists or even authors that like that we don't in English speaking world don't get to appreciate some like the depth of the culture because it's lost in translation and I feel like I would love to show that to the world. Like I'm just some idiot, but because I have this like at least some semblance of skill in speaking Russian, I feel like and I know how to record stuff on a video camera. I feel like I want to catch like Gregori Perlman who's a mathematician. I'm not sure if you're familiar with him. I want to talk to him like he's a fascinating mind and to bring him to a wider audience in English speaking. It'll be fascinating, but that requires to be rigorous about this question of how well Bulgakov translates. I mean, I know it's a silly concept, but it's a fundamental one because how do you translate? And that's the thing that Google Translate is also facing as a more machine learning problem, but I wonder as a more bigger problem for AI, how do we capture the magic that's there in the language? I think that's really interesting, really challenging problem. If you do read it, Master Margarita in English, sorry, in Russian, I'm curious to get your opinion. And I think part of it is language, but part of it is just centuries of culture that the cultures are different. So it's hard to connect that. Okay, so that was my first one, right? You had two more. The second one, I would probably pick the science fiction by the Strogosky brothers. It's up there with Isaac Asimov and Ray Bradbury and company. The Strogosky brothers appealed more to me. I think Mora made more of an impression on me growing up. Can you apologize if I'm showing my complete ignorance? I'm so weak on sci-fi. What are they, right? Roadside picnic. Hard to be a god. Beetle in an anthill. Monday starts on Saturday. It's not just science fiction. It also has very interesting interpersonal and societal questions and some of the language is just completely hilarious. That's right. Monday starts on Saturday. Okay. Oh boy. You put that in the category of science fiction? This was more of a silly humorous work. There is good. It's profound too, right? Science fiction is about this research institute. It has deep parallels to serious research, but the setting of course is that they're working on magic. And that's their style. Other books are very different. Hard to be a god. It's about this higher society being injected into this primitive world and how they operate there. Some of the very deep ethical questions there. They've got this full spectrum some is more about more adventure style. I enjoy all of their books. Probably a couple. Actually one I think that they consider their most important work. I think it's the snail on a hill. I'm not exactly sure how it translates. I tried reading a couple times. I still don't get it, but everything else I fully enjoyed. For one of my birthdays as a kid I got their entire collection occupied a giant shelf in my room and then over the holidays my parents couldn't drag me out of the room and I read the whole thing cover to cover and I really enjoyed it. And that's it. One more. Maybe a little bit darker, but comes to mind is Orwell's 1984. And you asked what made an impression on me and the books that people should read. That one I think falls in the category of both. It definitely is one of those books that you read and you just kind of put it down and you stare in space for a while. That kind of work. I think there's lessons there people should not ignore. And nowadays with everything that's happening in the world, I can't help it, but have my mind jump to some parallels with what Orwell described. And there's this whole concept of double think and ignoring logic and holding completely contradictory opinions in your mind and have that not bother you and stick into the party line at all costs. There's something there. If anything, 2020 has taught me and I'm a huge fan of Animal Farm, which is a kind of friendly as a friend of 1984 by Orwell. It's kind of another thought experiment of how our society may go in directions that we wouldn't like it to go. And if anything that's been kind of heartbreaking to an optimist about 2020 is that society is kind of fragile. This is a special little experiment we have going on and it's not unbreakable. We should be careful to preserve whatever special thing we have going on. And I think 1984 and these books, Brave New World, they're helpful in thinking like stuff can go wrong in non-obvious ways. And it's up to us to preserve it. And it's a responsibility. It's been weighing heavy on me because for some reason more than my mom follows me on Twitter and I feel like I have now a responsibility to this world. And it dawned on me that me and millions of others are the little ants that maintain this little colony. So we have a responsibility not to be, I don't know what the right analogy is, but I'll put a flamethrower to the place. We want to not do that. And there's interesting, complicated ways of doing that as 1984 shows. It could be through bureaucracy, it could be through incompetence, it could be through misinformation, it could be through division and toxicity. I'm a huge believer in that love will be somehow the solution. So love and robots. Love and robots, yeah. I think you're exactly right. Unfortunately, I think it's less of a flamethrower type of an experiment. I think it's more of, in many cases, it can be more of a slow boil and that's the danger. Let me ask, it's a fun thing to make a world class roboticist, engineer and leader uncomfortable with a ridiculous question about life. What is the meaning of life, Demetri, from a robotics and a human perspective? You only have a couple of minutes or one minute to answer. I don't know if that makes it more difficult or easier actually. Very tempted to quote one of the stories by Isaac Asimov actually, actually titled appropriately titled The Last Question, short story, where the plot is that humans build this supercomputer, this AI intelligence and once it gets powerful enough, they pose this question to it. How can the entropy in the universe be reduced? So the computer replies, as of yet insufficient information to give a meaningful answer. And then thousands of years go by and they keep posing the same question and the computer gets more and more powerful and keeps giving the same answer. As of yet insufficient information to give a meaningful answer or something along those lines. And then it keeps happening and happening, you fast forward like millions of years into the future and billions of years. And at some point it's just the only entity in the universe. It's like absorbed all humanity and all knowledge in the universe and it keeps posing the same question to itself. And finally it gets to the point where it is able to answer that question. But of course at that point, the heat death of the universe has occurred and that's the only entity and there's nobody else to provide that answer to. So the only thing it can do is to answer it by demonstration. So it like recreates the big bang and resets the clock. But I can try to give kind of a different version of the answer. Maybe not on the behalf of all humanity. I think that might be a little presumptuous for me to speak about the meaning of life on behalf of all humans, but at least personally, it changes. I think if you think about what gives you and your life meaning and purpose and what drives you, it seems to change over time and the lifespan of your existence. When you just enter this world, it's all about new experiences. You get new smells, new sounds, new emotions, and that's what's driving you. You're experiencing new amazing things and that's magical. That's pretty awesome. That gives you a little bit of meaning. Then you get a little bit older, you start more intentionally learning about things. I guess actually before you start intentionally learning, probably fun. Fun is a thing that gives you kind of meaning and purpose and the thing you optimize for. Fun is good. Then you get to start learning. I guess that this joy of comprehension and discovery is another thing that gives you meaning and purpose and drives you. You learn enough stuff and you want to give some of it back. Impact and contributions back to technology or society, people, local or more globally comes and you think that drives a lot of your behavior and something that gives you purpose and that you derive positive feedback from. Then you go and so on and so forth. You go through various stages of life. If you have kids, that definitely changes your perspective on things. I have three that definitely flips some bits in your head in terms of what you care about and what you optimize for and what matters, what doesn't matter. You know, and so on and so forth. It seems to me that it's all of those things and as you go through life, you want these to be additive. New experiences, fun, learning, impact, like you want to be accumulating. I don't want to stop having fun or experiencing new things and I think it's important that it just becomes additive as opposed to a replacement or subtraction. Those few as far as I got, but you know, ask me in a few years, I might have one or two more to add to the list. Before you know it, time is up just like it is for this conversation, but hopefully it was a fun ride. It was a huge honor to meet you. As you know, I've been a fan of yours and a fan of Google self-driving car and Waymo for a long time. I can't wait. I mean, it's one of the most exciting. If we look back in the 21st century, I truly believe it will be one of the most exciting things we descendants of apes have created on this earth. So I'm a huge fan and I can't wait to see what you do. Next, thanks so much for talking to me. Thanks for having me and it's also a huge fan. I didn't work on a snack and I really enjoyed it. Thank you. Thanks for listening to this conversation with Dmitry Dolgov and thank you to our sponsors, Fire Labs, a company that helps businesses apply machine learning to solve real world problems, Blinkist, an app I use for reading through summaries of books, BetterHelp, online therapy with a licensed professional, and Cash App, the app I use to send money to friends. Please check out these sponsors in the description to get a discount and to support this podcast. If you enjoy this thing, subscribe on YouTube, review it with Five Stars and Apple Podcasts, follow on Spotify, support on Patreon, or connect with me on Twitter at Lex Friedman. And now let me leave you with some words from Isaac Asimov. Science can amuse and fascinate us all, but it is engineering that changes the world. Thank you for listening and hope to see you next time.