 The Guardian Audience Audience Audience Producer Danielle and I were chatting about the new year and we got onto the biggest new year of our young lives the turn of the millennium Do you remember where you were for the millennium? I was 10 when the millennium happened I might have been 9 even, I was born in 1990 so I wasn't out partying but I was encouraged to stay up because how often do you see the turn of the millennium? Once every thousand years So I was staying up but I was in, so I was playing solitaire on the computer in the corner of the sitting room and actually it was the first time I'd ever successfully won solitaire on the computer and being the nerd that I am, I saved the final click forces struck me right so as the fireworks were exploding outside there were cards cascading across my computer screen Oh it's almost poetic It's beautiful isn't it? I wouldn't go that far, but it's nice What about the millennium bug, did you know about it? No, I feel like if I had heard about a millennium bug I would have assumed it was a virus or something going around my skull and that people were just nicknaming it after the new year I do remember it being mentioned but I can't remember if this is kind of in the run up to the millennium or afterwards, but I definitely remember it in the context of oh yeah it's just this thing that isn't actually going to happen It didn't ruin your solitaire game, no No it didn't actually What were you doing when the clock struck midnight on the 1st of January 2000? Were you happy to say goodbye to the 20th century? And did you have high hopes for the 21st? While some of you were clinking champagne flutes or singing old lang syne a lot of people were busy worrying about what this century might bring the millennium bug, otherwise known as Y2K The basic software in a lot of PCs in particular processed dates in a way that didn't handle the rollover into the new century and that would mean that those systems actually stopped and since they were used to control a lot of industrial systems factories and so on, nuclear reactors people were very worried about what might happen there Next year is the 20 year anniversary of what some joked was one of the biggest anti-climaxes to ever hit the globe but some cyber security experts still want us to remember Y2K and, importantly, be mindful of similar events that could impact us in future The Japanese calendar works in eras that are based on weeks of the Emperor's reign and so it restarts with a new era so it becomes exactly the same structure as the Y2K problem I'm Jordan Erika Webber and this week we're looking at what might have been what actually was and what might yet still be for the millennium bug and others like it This is Chips with Everything So you've actually been on this show before to talk about Y2K at the start of 2017 so that was before Danielle and I joined What's happened since then? Have there been any big changes in our understanding of Y2K? No, the myths continue One of the things that's happened is that with all the discussion about the consequences of Brexit and crashing out of the European Union Y2K has been invoked a lot by the people who want an analogy for something that's terribly frightening but won't happen and doesn't cause a problem Martin Thomas is a retired expert in software engineering and cyber security and emeritus professor in IT at Gresham College He knows a lot about Y2K but he doesn't know everything Have you seen that Nike has started selling Y2K inspired shoes? No, I hadn't noticed that They've got, I guess, kind of chrome coloured to reflect the colours of technology of the era Why do you think people want to look back on the early 2000s with such fondness? Do you have any theories? Perhaps because the present is fairly gloomy and the future looks worse We'll get to why Y2K is still relevant 19 years after it happened in a minute But first, let's travel back to the turn of the millennium Throughout the 1990s, people were preparing for the arrival of a so-called Millennium Bug So I got Martin to explain what this mysterious threat was actually supposed to be There were a number of issues around the year 2000 and the way that dates are handled in computer systems The big one is that for a very long time, centuries have been left off dates so that you just get the year number And of course, we're still doing that If you look on the front of your credit card or bank card, you'll see that we're still using two digits for the year We don't put the centuries in there The problem is that most commercial data processing handles dates And most commercial data processing uses them either to sort things into order or to work out gaps between dates How long is the expiry period? When does your security pass expire? How long is it safe to keep this item of food before it goes off? And so you have to do arithmetic on the dates and you have to do comparisons on the dates And if all you're doing is comparing the year without the century and the dates happen to cross a century boundary, you're in deep trouble So if you go from 1996, say, to 2004, then all you're comparing is 96 and 04 and that causes problems Yes, and the likelihood is that your software assumes that you're talking about 1904 rather than 2004 And you either end up with an 82 number or you end up with a very, very large number and both those things happen So what did people think was actually going to happen as a result of this if this millennium bug arrived? What were some of the more extreme forecasts? Oh, that all sorts of things would break down, that lots of computer systems would cease to work That banks wouldn't function, credit cards wouldn't function People were particularly worried about cascade failures across supply chains That the supply of food would stop, for example Or that the delivery of the chemicals for processing water wouldn't be possible And that therefore water systems would fail Or even that the pumps for the water would fail because they were computer controlled Surprisingly, we also have the British retailer, Marx and Spencer, to thank for warning us about Y2K There was a famous delivery of tinned meat to Marx and Spencer's that got rejected by the stores control system Because it looked as though it was over 100 years old And under those circumstances, the system was programmed automatically to reject the consignment On the goods inwards going into the Marx and Spencer store and to immediately reorder And they did, and of course the next consignment was rejected in exactly the same way And at that point, they realized they'd got a problem And then increasingly, other systems started to fail Anything that had to look forward to calculator and expiry date, for example, a pass for somebody to, you know, a library card or something like that Those systems started to produce silly numbers or actually to crash One reason Martin remembers this time so well is because he was one of the people working on Y2000 prevention I was a partner in Deloitte & Touche I'd sold my software engineering company to Deloitte in 1992 And so I was an IT partner in Deloitte & Touche And I was asked if I would take over internationally for the Deloitte & Touche consulting group The Y2K service line providing services to companies who needed expertise on Y2000 And who needed support in finding and fixing the problems So by the mid-90s, I was giving lots of talks to the auditors and to companies and to the boards of international companies Particularly in Europe and in America about the scale of the problem And persuading the auditors and helping them write the text that would actually really alert the companies that they were auditing To the fact that there was a major problem here And I was responsible for teams that were working on solving Y2K problems for major companies So once people did start to take this seriously and make preparations, what did that involve? What did maybe individuals do and what did big companies do? Well, the job of course was to find out what your vulnerabilities were and the first part of that was to try and work out what software you'd actually got And what computer systems you'd got that might be vulnerable And most companies discovered that they didn't even know what software they possessed And then it was necessary having discovered what systems you'd got You had to work out how you were going to check them in order to find out what kind of problems you'd got And there were various approaches to that For the big data processing systems, people would write programs or simply get a small army of people to read the source code of the software Looking for data processing in order to work out whether there were issues Other companies decided that their solution was to change the clocks, to do the testing, to simply reset the date on their systems And watch what happened when the clocks rolled over the end of the millennium After the break we'll learn more about what Fallout there was from Y2K and what we should learn from what could have happened I'm really worried about it actually, I think that we have built a digital society on foundations that are not well enough engineered to support the trust that's placed on it And that that can only end in some pretty serious calamities Don't go anywhere, we'll be right back Hey, podcast fans! Looking for something fun to do over the festive period? Maybe you or someone you know got a Google Home as a gift Well, we want to tell you about The Guardian's Year in Review, a project we've been working on with The Voice Lab It's a fun, interactive review of some of The Guardian's biggest and oddest headlines of 2018 So, if you checked out The Guardian's podcast this year, we think you'll enjoy a year in review To play, just say, hey Google, talk to year in review Bye for now Bye Welcome back to Chips with Everything, I'm Jordan Erica Webber This week, we're talking about the bug that some say never quite bit, Y2K Late on the evening of the 31st, we got a call from the air traffic controllers in Scotland Saying they thought their radars had failed because they were getting no returns from any aircraft And it turned out there was nobody flying All the airlines had grounded all their aircraft because they were nervous Partly that some of the aircraft systems might fail But much more that the airport systems would fail and they wouldn't be able to land Before the break, cyber security expert Martin Thomas gave us a quick history of the Y2K problem As Martin explains, the Millennium bug did happen Systems did crash It just wasn't as bad as people had been led to expect At four o'clock in the morning on January the first, on every airfield owned and run by National Air Traffic Services The equipment for runway visual range, as it's called, that does the visibility on the ground All failed simultaneously Because they were scheduled, every four o'clock every morning, they make contact with the system that controls them And the clocks were different on the two systems And that was enough to cause them to shut down because they detected there was something wrong and for safety closed down So all those systems, I didn't have any safety effects of course because nobody was flying And all it took was to restart the computers and everything was fine But in a number of other countries, major problems occurred 15 nuclear reactors shut down, for example, for Y2K problems There was a serious problem in the UK that was only discovered later Which was that the system that alerted mothers of a particular age that they needed to be screened for Down's Syndrome during pregnancy Turned out to be working incorrectly because of a Y2K problem So all these things did happen as a result of Y2K despite all the effort that went into preventing too many disasters Why do people still think that nothing happened? A lot of the failures that did occur weren't publicized because they were embarrassing to the companies After all the work that had been done and all the warnings So there was nothing in it for them to announce that they'd had a failure And if they could manage to fix those things quickly without the disturbance showing up Or if they could blame it on something else, then they weren't likely to put out a press release saying we had a Y2K problem The major problems that would have occurred had all that effort not been put in, of course, didn't happen And so there was a large element of people necessarily talking up the scale of the problem beforehand In order to get the work done, and then of course people saying, well, that calamity didn't occur And it's just human nature When you manage to avoid a problem, it's easy to imagine that the problem wasn't there After Y2K turned out not to be anywhere near as disastrous as people had come to believe it would be, there was a cynical backlash But Martin insists that's no cause for complacency More potential bugs are out there, and we need to be ready We certainly need to continue worrying about anywhere where a lot of systems might fail simultaneously as a result of a single event And there are a frightening number of those still around There is a recent report from the Government Office of Science, a Blackett report, about the dependence of the U.K. economy On the position, navigation, and in particular the timing signals that come from GPS Which means that if GPS were to fail, an astonishing amount of the economy would collapse Do you feel like people don't tend to learn then from things like this? Oh, absolutely Particularly if people go around telling them that it was all a scam and nothing happened But what has happened since is that for economic reasons we've taken the resilience out of lots of supply chains So the possibility of cascade failures is much higher now People don't realise that putting in redundancy for resilience purposes is like buying insurance And just like buying insurance, it can be a very good idea In July 2018, my colleague Alex Hearn wrote that some experts predict we might see a Y2K-type problem in Japan When Emperor Akihito abdicates the throne later this year The Japanese calendar works in eras that are based on weeks of the Emperor's reign And so it restarts with a new era And you get exactly the same problems as the Y2K problem If you're processing data that goes across an era boundary, then all the calculations will start to go wrong If you don't process that boundary correctly, if you're just relying on the numbers and the weak number within an era And not noticing, not recognising that you're working across an era boundary So it becomes exactly the same structure as the Y2K problem So a number of software companies have been trying to ensure that their customers had the ability to do testing against a change of era Y2K is fixed in many of our minds as a classic, even comedic example of unnecessary scaremongering But as Martin points out, even after heaps of resources went into solving the problem, some millennium bugs still slipped through the net And these unforeseen consequences should remind us of just how dependent our society is on the reliability of software In particular, I think learning the lessons of Y2K that you really do need to treat software as an engineered product And that it needs to be developed in a rigorous way if you need to trust it That's a lesson that we haven't learnt I'm really worried about it actually, I think that we have built a digital society on foundations that are not well enough engineered to support the trust that's placed on it And that that can only end in some pretty serious calamities So we're building a society that is increasingly vulnerable in an environment that is increasingly hostile And it just doesn't feel like something that ends well As we start to find out what 2019 has in store for us, we need to be mindful of these potential vulnerabilities Especially as we continue to hand more and more control over to machines That's all for this week, special thanks to Martin Thomas for joining me We're always looking for new stories to cover, so if you have something interesting to tell us about, send us an email at chipspodcastattheguardian.com I'm Jordan Erica Webber, thanks for listening